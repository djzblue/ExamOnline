#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.2045
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace SDPTExam.DAL.Linq
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="ExamDB")]
	public partial class ExamDbDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region 可扩展性方法定义
    partial void OnCreated();
    partial void InsertAdminUserInfo(SDPTExam.DAL.Model.AdminUserInfo instance);
    partial void UpdateAdminUserInfo(SDPTExam.DAL.Model.AdminUserInfo instance);
    partial void DeleteAdminUserInfo(SDPTExam.DAL.Model.AdminUserInfo instance);
    partial void InsertTimeLimitInfo(SDPTExam.DAL.Model.TimeLimitInfo instance);
    partial void UpdateTimeLimitInfo(SDPTExam.DAL.Model.TimeLimitInfo instance);
    partial void DeleteTimeLimitInfo(SDPTExam.DAL.Model.TimeLimitInfo instance);
    partial void InsertBasicExamInfo(SDPTExam.DAL.Model.BasicExamInfo instance);
    partial void UpdateBasicExamInfo(SDPTExam.DAL.Model.BasicExamInfo instance);
    partial void DeleteBasicExamInfo(SDPTExam.DAL.Model.BasicExamInfo instance);
    partial void InsertChapterInfo(SDPTExam.DAL.Model.ChapterInfo instance);
    partial void UpdateChapterInfo(SDPTExam.DAL.Model.ChapterInfo instance);
    partial void DeleteChapterInfo(SDPTExam.DAL.Model.ChapterInfo instance);
    partial void InsertChoiceItemInfo(SDPTExam.DAL.Model.ChoiceItemInfo instance);
    partial void UpdateChoiceItemInfo(SDPTExam.DAL.Model.ChoiceItemInfo instance);
    partial void DeleteChoiceItemInfo(SDPTExam.DAL.Model.ChoiceItemInfo instance);
    partial void InsertClassInfo(SDPTExam.DAL.Model.ClassInfo instance);
    partial void UpdateClassInfo(SDPTExam.DAL.Model.ClassInfo instance);
    partial void DeleteClassInfo(SDPTExam.DAL.Model.ClassInfo instance);
    partial void InsertCourseInfo(SDPTExam.DAL.Model.CourseInfo instance);
    partial void UpdateCourseInfo(SDPTExam.DAL.Model.CourseInfo instance);
    partial void DeleteCourseInfo(SDPTExam.DAL.Model.CourseInfo instance);
    partial void InsertDepartmentInfo(SDPTExam.DAL.Model.DepartmentInfo instance);
    partial void UpdateDepartmentInfo(SDPTExam.DAL.Model.DepartmentInfo instance);
    partial void DeleteDepartmentInfo(SDPTExam.DAL.Model.DepartmentInfo instance);
    partial void InsertExamResultInfo(SDPTExam.DAL.Model.ExamResultInfo instance);
    partial void UpdateExamResultInfo(SDPTExam.DAL.Model.ExamResultInfo instance);
    partial void DeleteExamResultInfo(SDPTExam.DAL.Model.ExamResultInfo instance);
    partial void InsertJudgeInfo(SDPTExam.DAL.Model.JudgeInfo instance);
    partial void UpdateJudgeInfo(SDPTExam.DAL.Model.JudgeInfo instance);
    partial void DeleteJudgeInfo(SDPTExam.DAL.Model.JudgeInfo instance);
    partial void InsertKnowledgePointInfo(SDPTExam.DAL.Model.KnowledgePointInfo instance);
    partial void UpdateKnowledgePointInfo(SDPTExam.DAL.Model.KnowledgePointInfo instance);
    partial void DeleteKnowledgePointInfo(SDPTExam.DAL.Model.KnowledgePointInfo instance);
    partial void InsertLogInfo(SDPTExam.DAL.Model.LogInfo instance);
    partial void UpdateLogInfo(SDPTExam.DAL.Model.LogInfo instance);
    partial void DeleteLogInfo(SDPTExam.DAL.Model.LogInfo instance);
    partial void InsertMajorInfo(SDPTExam.DAL.Model.MajorInfo instance);
    partial void UpdateMajorInfo(SDPTExam.DAL.Model.MajorInfo instance);
    partial void DeleteMajorInfo(SDPTExam.DAL.Model.MajorInfo instance);
    partial void InsertMessageInfo(SDPTExam.DAL.Model.MessageInfo instance);
    partial void UpdateMessageInfo(SDPTExam.DAL.Model.MessageInfo instance);
    partial void DeleteMessageInfo(SDPTExam.DAL.Model.MessageInfo instance);
    partial void InsertNoticeInfo(SDPTExam.DAL.Model.NoticeInfo instance);
    partial void UpdateNoticeInfo(SDPTExam.DAL.Model.NoticeInfo instance);
    partial void DeleteNoticeInfo(SDPTExam.DAL.Model.NoticeInfo instance);
    partial void InsertQuestionInfo(SDPTExam.DAL.Model.QuestionInfo instance);
    partial void UpdateQuestionInfo(SDPTExam.DAL.Model.QuestionInfo instance);
    partial void DeleteQuestionInfo(SDPTExam.DAL.Model.QuestionInfo instance);
    partial void InsertQuestionTypeInfo(SDPTExam.DAL.Model.QuestionTypeInfo instance);
    partial void UpdateQuestionTypeInfo(SDPTExam.DAL.Model.QuestionTypeInfo instance);
    partial void DeleteQuestionTypeInfo(SDPTExam.DAL.Model.QuestionTypeInfo instance);
    partial void InsertRandomExamInfo(SDPTExam.DAL.Model.RandomExamInfo instance);
    partial void UpdateRandomExamInfo(SDPTExam.DAL.Model.RandomExamInfo instance);
    partial void DeleteRandomExamInfo(SDPTExam.DAL.Model.RandomExamInfo instance);
    partial void InsertRoleInfo(SDPTExam.DAL.Model.RoleInfo instance);
    partial void UpdateRoleInfo(SDPTExam.DAL.Model.RoleInfo instance);
    partial void DeleteRoleInfo(SDPTExam.DAL.Model.RoleInfo instance);
    partial void InsertSelectChoiceInfo(SDPTExam.DAL.Model.SelectChoiceInfo instance);
    partial void UpdateSelectChoiceInfo(SDPTExam.DAL.Model.SelectChoiceInfo instance);
    partial void DeleteSelectChoiceInfo(SDPTExam.DAL.Model.SelectChoiceInfo instance);
    partial void InsertStudentInfo(SDPTExam.DAL.Model.StudentInfo instance);
    partial void UpdateStudentInfo(SDPTExam.DAL.Model.StudentInfo instance);
    partial void DeleteStudentInfo(SDPTExam.DAL.Model.StudentInfo instance);
    partial void InsertSubjectInfo(SDPTExam.DAL.Model.SubjectInfo instance);
    partial void UpdateSubjectInfo(SDPTExam.DAL.Model.SubjectInfo instance);
    partial void DeleteSubjectInfo(SDPTExam.DAL.Model.SubjectInfo instance);
    partial void InsertTeacherInfo(SDPTExam.DAL.Model.TeacherInfo instance);
    partial void UpdateTeacherInfo(SDPTExam.DAL.Model.TeacherInfo instance);
    partial void DeleteTeacherInfo(SDPTExam.DAL.Model.TeacherInfo instance);
    #endregion
		
		public ExamDbDataContext() : 
				base(global::DAL.Properties.Settings.Default.ExamDBConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public ExamDbDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ExamDbDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ExamDbDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ExamDbDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<SDPTExam.DAL.Model.AdminUserInfo> AdminUserInfo
		{
			get
			{
				return this.GetTable<SDPTExam.DAL.Model.AdminUserInfo>();
			}
		}
		
		public System.Data.Linq.Table<SDPTExam.DAL.Model.TimeLimitInfo> TimeLimitInfo
		{
			get
			{
				return this.GetTable<SDPTExam.DAL.Model.TimeLimitInfo>();
			}
		}
		
		public System.Data.Linq.Table<SDPTExam.DAL.Model.BasicExamInfo> BasicExamInfo
		{
			get
			{
				return this.GetTable<SDPTExam.DAL.Model.BasicExamInfo>();
			}
		}
		
		public System.Data.Linq.Table<SDPTExam.DAL.Model.ChapterInfo> ChapterInfo
		{
			get
			{
				return this.GetTable<SDPTExam.DAL.Model.ChapterInfo>();
			}
		}
		
		public System.Data.Linq.Table<SDPTExam.DAL.Model.ChoiceItemInfo> ChoiceItemInfo
		{
			get
			{
				return this.GetTable<SDPTExam.DAL.Model.ChoiceItemInfo>();
			}
		}
		
		public System.Data.Linq.Table<SDPTExam.DAL.Model.ClassInfo> ClassInfo
		{
			get
			{
				return this.GetTable<SDPTExam.DAL.Model.ClassInfo>();
			}
		}
		
		public System.Data.Linq.Table<SDPTExam.DAL.Model.CourseInfo> CourseInfo
		{
			get
			{
				return this.GetTable<SDPTExam.DAL.Model.CourseInfo>();
			}
		}
		
		public System.Data.Linq.Table<SDPTExam.DAL.Model.DepartmentInfo> DepartmentInfo
		{
			get
			{
				return this.GetTable<SDPTExam.DAL.Model.DepartmentInfo>();
			}
		}
		
		public System.Data.Linq.Table<SDPTExam.DAL.Model.ExamResultInfo> ExamResultInfo
		{
			get
			{
				return this.GetTable<SDPTExam.DAL.Model.ExamResultInfo>();
			}
		}
		
		public System.Data.Linq.Table<SDPTExam.DAL.Model.JudgeInfo> JudgeInfo
		{
			get
			{
				return this.GetTable<SDPTExam.DAL.Model.JudgeInfo>();
			}
		}
		
		public System.Data.Linq.Table<SDPTExam.DAL.Model.KnowledgePointInfo> KnowledgePointInfo
		{
			get
			{
				return this.GetTable<SDPTExam.DAL.Model.KnowledgePointInfo>();
			}
		}
		
		public System.Data.Linq.Table<SDPTExam.DAL.Model.LogInfo> LogInfo
		{
			get
			{
				return this.GetTable<SDPTExam.DAL.Model.LogInfo>();
			}
		}
		
		public System.Data.Linq.Table<SDPTExam.DAL.Model.MajorInfo> MajorInfo
		{
			get
			{
				return this.GetTable<SDPTExam.DAL.Model.MajorInfo>();
			}
		}
		
		public System.Data.Linq.Table<SDPTExam.DAL.Model.MessageInfo> MessageInfo
		{
			get
			{
				return this.GetTable<SDPTExam.DAL.Model.MessageInfo>();
			}
		}
		
		public System.Data.Linq.Table<SDPTExam.DAL.Model.NoticeInfo> NoticeInfo
		{
			get
			{
				return this.GetTable<SDPTExam.DAL.Model.NoticeInfo>();
			}
		}
		
		public System.Data.Linq.Table<SDPTExam.DAL.Model.QuestionInfo> QuestionInfo
		{
			get
			{
				return this.GetTable<SDPTExam.DAL.Model.QuestionInfo>();
			}
		}
		
		public System.Data.Linq.Table<SDPTExam.DAL.Model.QuestionTypeInfo> QuestionTypeInfo
		{
			get
			{
				return this.GetTable<SDPTExam.DAL.Model.QuestionTypeInfo>();
			}
		}
		
		public System.Data.Linq.Table<SDPTExam.DAL.Model.RandomExamInfo> RandomExamInfo
		{
			get
			{
				return this.GetTable<SDPTExam.DAL.Model.RandomExamInfo>();
			}
		}
		
		public System.Data.Linq.Table<SDPTExam.DAL.Model.RoleInfo> RoleInfo
		{
			get
			{
				return this.GetTable<SDPTExam.DAL.Model.RoleInfo>();
			}
		}
		
		public System.Data.Linq.Table<SDPTExam.DAL.Model.SelectChoiceInfo> SelectChoiceInfo
		{
			get
			{
				return this.GetTable<SDPTExam.DAL.Model.SelectChoiceInfo>();
			}
		}
		
		public System.Data.Linq.Table<SDPTExam.DAL.Model.StudentInfo> StudentInfo
		{
			get
			{
				return this.GetTable<SDPTExam.DAL.Model.StudentInfo>();
			}
		}
		
		public System.Data.Linq.Table<SDPTExam.DAL.Model.SubjectInfo> SubjectInfo
		{
			get
			{
				return this.GetTable<SDPTExam.DAL.Model.SubjectInfo>();
			}
		}
		
		public System.Data.Linq.Table<SDPTExam.DAL.Model.TeacherInfo> TeacherInfo
		{
			get
			{
				return this.GetTable<SDPTExam.DAL.Model.TeacherInfo>();
			}
		}
	}
}
namespace SDPTExam.DAL.Model
{
	using System.Runtime.Serialization;
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AdminUserInfo")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class AdminUserInfo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _AdminUserID;
		
		private string _LoginName;
		
		private string _Password;
		
		private bool _IsSuperAdmin;
		
		private int _DepartmentID;
		
		private System.Nullable<int> _TeacherID;
		
		private bool _IsFromAdministration;
		
		private System.Nullable<int> _RoleID;
		
		private int _LoginCount;
		
		private EntityRef<DepartmentInfo> _DepartmentInfo;
		
		private EntityRef<RoleInfo> _RoleInfo;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAdminUserIDChanging(int value);
    partial void OnAdminUserIDChanged();
    partial void OnLoginNameChanging(string value);
    partial void OnLoginNameChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnIsSuperAdminChanging(bool value);
    partial void OnIsSuperAdminChanged();
    partial void OnDepartmentIDChanging(int value);
    partial void OnDepartmentIDChanged();
    partial void OnTeacherIDChanging(System.Nullable<int> value);
    partial void OnTeacherIDChanged();
    partial void OnIsFromAdministrationChanging(bool value);
    partial void OnIsFromAdministrationChanged();
    partial void OnRoleIDChanging(System.Nullable<int> value);
    partial void OnRoleIDChanged();
    partial void OnLoginCountChanging(int value);
    partial void OnLoginCountChanged();
    #endregion
		
		public AdminUserInfo()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdminUserID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int AdminUserID
		{
			get
			{
				return this._AdminUserID;
			}
			set
			{
				if ((this._AdminUserID != value))
				{
					this.OnAdminUserIDChanging(value);
					this.SendPropertyChanging();
					this._AdminUserID = value;
					this.SendPropertyChanged("AdminUserID");
					this.OnAdminUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoginName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string LoginName
		{
			get
			{
				return this._LoginName;
			}
			set
			{
				if ((this._LoginName != value))
				{
					this.OnLoginNameChanging(value);
					this.SendPropertyChanging();
					this._LoginName = value;
					this.SendPropertyChanged("LoginName");
					this.OnLoginNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsSuperAdmin", DbType="Bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public bool IsSuperAdmin
		{
			get
			{
				return this._IsSuperAdmin;
			}
			set
			{
				if ((this._IsSuperAdmin != value))
				{
					this.OnIsSuperAdminChanging(value);
					this.SendPropertyChanging();
					this._IsSuperAdmin = value;
					this.SendPropertyChanged("IsSuperAdmin");
					this.OnIsSuperAdminChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartmentID", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public int DepartmentID
		{
			get
			{
				return this._DepartmentID;
			}
			set
			{
				if ((this._DepartmentID != value))
				{
					if (this._DepartmentInfo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDepartmentIDChanging(value);
					this.SendPropertyChanging();
					this._DepartmentID = value;
					this.SendPropertyChanged("DepartmentID");
					this.OnDepartmentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TeacherID", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public System.Nullable<int> TeacherID
		{
			get
			{
				return this._TeacherID;
			}
			set
			{
				if ((this._TeacherID != value))
				{
					this.OnTeacherIDChanging(value);
					this.SendPropertyChanging();
					this._TeacherID = value;
					this.SendPropertyChanged("TeacherID");
					this.OnTeacherIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsFromAdministration", DbType="Bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public bool IsFromAdministration
		{
			get
			{
				return this._IsFromAdministration;
			}
			set
			{
				if ((this._IsFromAdministration != value))
				{
					this.OnIsFromAdministrationChanging(value);
					this.SendPropertyChanging();
					this._IsFromAdministration = value;
					this.SendPropertyChanged("IsFromAdministration");
					this.OnIsFromAdministrationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleID", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public System.Nullable<int> RoleID
		{
			get
			{
				return this._RoleID;
			}
			set
			{
				if ((this._RoleID != value))
				{
					if (this._RoleInfo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRoleIDChanging(value);
					this.SendPropertyChanging();
					this._RoleID = value;
					this.SendPropertyChanged("RoleID");
					this.OnRoleIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoginCount", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public int LoginCount
		{
			get
			{
				return this._LoginCount;
			}
			set
			{
				if ((this._LoginCount != value))
				{
					this.OnLoginCountChanging(value);
					this.SendPropertyChanging();
					this._LoginCount = value;
					this.SendPropertyChanged("LoginCount");
					this.OnLoginCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DepartmentInfo_AdminUserInfo", Storage="_DepartmentInfo", ThisKey="DepartmentID", OtherKey="DepartmentID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public DepartmentInfo DepartmentInfo
		{
			get
			{
				return this._DepartmentInfo.Entity;
			}
			set
			{
				DepartmentInfo previousValue = this._DepartmentInfo.Entity;
				if (((previousValue != value) 
							|| (this._DepartmentInfo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DepartmentInfo.Entity = null;
						previousValue.AdminUserInfo.Remove(this);
					}
					this._DepartmentInfo.Entity = value;
					if ((value != null))
					{
						value.AdminUserInfo.Add(this);
						this._DepartmentID = value.DepartmentID;
					}
					else
					{
						this._DepartmentID = default(int);
					}
					this.SendPropertyChanged("DepartmentInfo");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RoleInfo_AdminUserInfo", Storage="_RoleInfo", ThisKey="RoleID", OtherKey="RoleID", IsForeignKey=true)]
		public RoleInfo RoleInfo
		{
			get
			{
				return this._RoleInfo.Entity;
			}
			set
			{
				RoleInfo previousValue = this._RoleInfo.Entity;
				if (((previousValue != value) 
							|| (this._RoleInfo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._RoleInfo.Entity = null;
						previousValue.AdminUserInfo.Remove(this);
					}
					this._RoleInfo.Entity = value;
					if ((value != null))
					{
						value.AdminUserInfo.Add(this);
						this._RoleID = value.RoleID;
					}
					else
					{
						this._RoleID = default(Nullable<int>);
					}
					this.SendPropertyChanged("RoleInfo");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._DepartmentInfo = default(EntityRef<DepartmentInfo>);
			this._RoleInfo = default(EntityRef<RoleInfo>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TimeLimitInfo")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class TimeLimitInfo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _TimeLimitID;
		
		private System.DateTime _startTime;
		
		private System.DateTime _endTime;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTimeLimitIDChanging(int value);
    partial void OnTimeLimitIDChanged();
    partial void OnstartTimeChanging(System.DateTime value);
    partial void OnstartTimeChanged();
    partial void OnendTimeChanging(System.DateTime value);
    partial void OnendTimeChanged();
    #endregion
		
		public TimeLimitInfo()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeLimitID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int TimeLimitID
		{
			get
			{
				return this._TimeLimitID;
			}
			set
			{
				if ((this._TimeLimitID != value))
				{
					this.OnTimeLimitIDChanging(value);
					this.SendPropertyChanging();
					this._TimeLimitID = value;
					this.SendPropertyChanged("TimeLimitID");
					this.OnTimeLimitIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_startTime", DbType="DateTime NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public System.DateTime startTime
		{
			get
			{
				return this._startTime;
			}
			set
			{
				if ((this._startTime != value))
				{
					this.OnstartTimeChanging(value);
					this.SendPropertyChanging();
					this._startTime = value;
					this.SendPropertyChanged("startTime");
					this.OnstartTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_endTime", DbType="DateTime NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public System.DateTime endTime
		{
			get
			{
				return this._endTime;
			}
			set
			{
				if ((this._endTime != value))
				{
					this.OnendTimeChanging(value);
					this.SendPropertyChanging();
					this._endTime = value;
					this.SendPropertyChanged("endTime");
					this.OnendTimeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BasicExamInfo")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class BasicExamInfo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _BasicExamID;
		
		private string _BasicExamTitle;
		
		private string _BasicExamDesc;
		
		private System.Nullable<int> _MajorID;
		
		private int _ChapterID;
		
		private int _CourseID;
		
		private System.Nullable<int> _AuthorID;
		
		private System.DateTime _AddedDate;
		
		private int _TimeUse;
		
		private System.Nullable<int> _SingChoiceNum;
		
		private System.Nullable<int> _SingChoiceMark;
		
		private System.Nullable<int> _MutilChoiceNum;
		
		private System.Nullable<int> _MutilChoiceMark;
		
		private System.Nullable<int> _JudgeNum;
		
		private System.Nullable<int> _JudgeMark;
		
		private bool _IsActive;
		
		private System.Nullable<int> _BasicQuestionCount;
		
		private System.Nullable<int> _DifficultFactor;
		
		private System.Nullable<int> _DiscriminationFactor;
		
		private string _KPointDistribute;
		
		private string _QuestionTypeIDS;
		
		private string _QuestionTypeCount;
		
		private EntitySet<RandomExamInfo> _RandomExamInfo;
		
		private EntityRef<CourseInfo> _CourseInfo;
		
		private bool serializing;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBasicExamIDChanging(int value);
    partial void OnBasicExamIDChanged();
    partial void OnBasicExamTitleChanging(string value);
    partial void OnBasicExamTitleChanged();
    partial void OnBasicExamDescChanging(string value);
    partial void OnBasicExamDescChanged();
    partial void OnMajorIDChanging(System.Nullable<int> value);
    partial void OnMajorIDChanged();
    partial void OnChapterIDChanging(int value);
    partial void OnChapterIDChanged();
    partial void OnCourseIDChanging(int value);
    partial void OnCourseIDChanged();
    partial void OnAuthorIDChanging(System.Nullable<int> value);
    partial void OnAuthorIDChanged();
    partial void OnAddedDateChanging(System.DateTime value);
    partial void OnAddedDateChanged();
    partial void OnTimeUseChanging(int value);
    partial void OnTimeUseChanged();
    partial void OnSingChoiceNumChanging(System.Nullable<int> value);
    partial void OnSingChoiceNumChanged();
    partial void OnSingChoiceMarkChanging(System.Nullable<int> value);
    partial void OnSingChoiceMarkChanged();
    partial void OnMutilChoiceNumChanging(System.Nullable<int> value);
    partial void OnMutilChoiceNumChanged();
    partial void OnMutilChoiceMarkChanging(System.Nullable<int> value);
    partial void OnMutilChoiceMarkChanged();
    partial void OnJudgeNumChanging(System.Nullable<int> value);
    partial void OnJudgeNumChanged();
    partial void OnJudgeMarkChanging(System.Nullable<int> value);
    partial void OnJudgeMarkChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    partial void OnBasicQuestionCountChanging(System.Nullable<int> value);
    partial void OnBasicQuestionCountChanged();
    partial void OnDifficultFactorChanging(System.Nullable<int> value);
    partial void OnDifficultFactorChanged();
    partial void OnDiscriminationFactorChanging(System.Nullable<int> value);
    partial void OnDiscriminationFactorChanged();
    partial void OnKPointDistributeChanging(string value);
    partial void OnKPointDistributeChanged();
    partial void OnQuestionTypeIDSChanging(string value);
    partial void OnQuestionTypeIDSChanged();
    partial void OnQuestionTypeCountChanging(string value);
    partial void OnQuestionTypeCountChanged();
    #endregion
		
		public BasicExamInfo()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BasicExamID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int BasicExamID
		{
			get
			{
				return this._BasicExamID;
			}
			set
			{
				if ((this._BasicExamID != value))
				{
					this.OnBasicExamIDChanging(value);
					this.SendPropertyChanging();
					this._BasicExamID = value;
					this.SendPropertyChanged("BasicExamID");
					this.OnBasicExamIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BasicExamTitle", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string BasicExamTitle
		{
			get
			{
				return this._BasicExamTitle;
			}
			set
			{
				if ((this._BasicExamTitle != value))
				{
					this.OnBasicExamTitleChanging(value);
					this.SendPropertyChanging();
					this._BasicExamTitle = value;
					this.SendPropertyChanged("BasicExamTitle");
					this.OnBasicExamTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BasicExamDesc", DbType="NVarChar(MAX)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string BasicExamDesc
		{
			get
			{
				return this._BasicExamDesc;
			}
			set
			{
				if ((this._BasicExamDesc != value))
				{
					this.OnBasicExamDescChanging(value);
					this.SendPropertyChanging();
					this._BasicExamDesc = value;
					this.SendPropertyChanged("BasicExamDesc");
					this.OnBasicExamDescChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MajorID", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public System.Nullable<int> MajorID
		{
			get
			{
				return this._MajorID;
			}
			set
			{
				if ((this._MajorID != value))
				{
					this.OnMajorIDChanging(value);
					this.SendPropertyChanging();
					this._MajorID = value;
					this.SendPropertyChanged("MajorID");
					this.OnMajorIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChapterID", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public int ChapterID
		{
			get
			{
				return this._ChapterID;
			}
			set
			{
				if ((this._ChapterID != value))
				{
					this.OnChapterIDChanging(value);
					this.SendPropertyChanging();
					this._ChapterID = value;
					this.SendPropertyChanged("ChapterID");
					this.OnChapterIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CourseID", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public int CourseID
		{
			get
			{
				return this._CourseID;
			}
			set
			{
				if ((this._CourseID != value))
				{
					if (this._CourseInfo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCourseIDChanging(value);
					this.SendPropertyChanging();
					this._CourseID = value;
					this.SendPropertyChanged("CourseID");
					this.OnCourseIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuthorID", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public System.Nullable<int> AuthorID
		{
			get
			{
				return this._AuthorID;
			}
			set
			{
				if ((this._AuthorID != value))
				{
					this.OnAuthorIDChanging(value);
					this.SendPropertyChanging();
					this._AuthorID = value;
					this.SendPropertyChanged("AuthorID");
					this.OnAuthorIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddedDate", DbType="DateTime NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public System.DateTime AddedDate
		{
			get
			{
				return this._AddedDate;
			}
			set
			{
				if ((this._AddedDate != value))
				{
					this.OnAddedDateChanging(value);
					this.SendPropertyChanging();
					this._AddedDate = value;
					this.SendPropertyChanged("AddedDate");
					this.OnAddedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeUse", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public int TimeUse
		{
			get
			{
				return this._TimeUse;
			}
			set
			{
				if ((this._TimeUse != value))
				{
					this.OnTimeUseChanging(value);
					this.SendPropertyChanging();
					this._TimeUse = value;
					this.SendPropertyChanged("TimeUse");
					this.OnTimeUseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SingChoiceNum", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10)]
		public System.Nullable<int> SingChoiceNum
		{
			get
			{
				return this._SingChoiceNum;
			}
			set
			{
				if ((this._SingChoiceNum != value))
				{
					this.OnSingChoiceNumChanging(value);
					this.SendPropertyChanging();
					this._SingChoiceNum = value;
					this.SendPropertyChanged("SingChoiceNum");
					this.OnSingChoiceNumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SingChoiceMark", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=11)]
		public System.Nullable<int> SingChoiceMark
		{
			get
			{
				return this._SingChoiceMark;
			}
			set
			{
				if ((this._SingChoiceMark != value))
				{
					this.OnSingChoiceMarkChanging(value);
					this.SendPropertyChanging();
					this._SingChoiceMark = value;
					this.SendPropertyChanged("SingChoiceMark");
					this.OnSingChoiceMarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MutilChoiceNum", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=12)]
		public System.Nullable<int> MutilChoiceNum
		{
			get
			{
				return this._MutilChoiceNum;
			}
			set
			{
				if ((this._MutilChoiceNum != value))
				{
					this.OnMutilChoiceNumChanging(value);
					this.SendPropertyChanging();
					this._MutilChoiceNum = value;
					this.SendPropertyChanged("MutilChoiceNum");
					this.OnMutilChoiceNumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MutilChoiceMark", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=13)]
		public System.Nullable<int> MutilChoiceMark
		{
			get
			{
				return this._MutilChoiceMark;
			}
			set
			{
				if ((this._MutilChoiceMark != value))
				{
					this.OnMutilChoiceMarkChanging(value);
					this.SendPropertyChanging();
					this._MutilChoiceMark = value;
					this.SendPropertyChanged("MutilChoiceMark");
					this.OnMutilChoiceMarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JudgeNum", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=14)]
		public System.Nullable<int> JudgeNum
		{
			get
			{
				return this._JudgeNum;
			}
			set
			{
				if ((this._JudgeNum != value))
				{
					this.OnJudgeNumChanging(value);
					this.SendPropertyChanging();
					this._JudgeNum = value;
					this.SendPropertyChanged("JudgeNum");
					this.OnJudgeNumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JudgeMark", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=15)]
		public System.Nullable<int> JudgeMark
		{
			get
			{
				return this._JudgeMark;
			}
			set
			{
				if ((this._JudgeMark != value))
				{
					this.OnJudgeMarkChanging(value);
					this.SendPropertyChanging();
					this._JudgeMark = value;
					this.SendPropertyChanged("JudgeMark");
					this.OnJudgeMarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=16)]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BasicQuestionCount", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=17)]
		public System.Nullable<int> BasicQuestionCount
		{
			get
			{
				return this._BasicQuestionCount;
			}
			set
			{
				if ((this._BasicQuestionCount != value))
				{
					this.OnBasicQuestionCountChanging(value);
					this.SendPropertyChanging();
					this._BasicQuestionCount = value;
					this.SendPropertyChanged("BasicQuestionCount");
					this.OnBasicQuestionCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DifficultFactor", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=18)]
		public System.Nullable<int> DifficultFactor
		{
			get
			{
				return this._DifficultFactor;
			}
			set
			{
				if ((this._DifficultFactor != value))
				{
					this.OnDifficultFactorChanging(value);
					this.SendPropertyChanging();
					this._DifficultFactor = value;
					this.SendPropertyChanged("DifficultFactor");
					this.OnDifficultFactorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiscriminationFactor", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=19)]
		public System.Nullable<int> DiscriminationFactor
		{
			get
			{
				return this._DiscriminationFactor;
			}
			set
			{
				if ((this._DiscriminationFactor != value))
				{
					this.OnDiscriminationFactorChanging(value);
					this.SendPropertyChanging();
					this._DiscriminationFactor = value;
					this.SendPropertyChanged("DiscriminationFactor");
					this.OnDiscriminationFactorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KPointDistribute", DbType="NVarChar(MAX)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=20)]
		public string KPointDistribute
		{
			get
			{
				return this._KPointDistribute;
			}
			set
			{
				if ((this._KPointDistribute != value))
				{
					this.OnKPointDistributeChanging(value);
					this.SendPropertyChanging();
					this._KPointDistribute = value;
					this.SendPropertyChanged("KPointDistribute");
					this.OnKPointDistributeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuestionTypeIDS", DbType="NVarChar(MAX)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=21)]
		public string QuestionTypeIDS
		{
			get
			{
				return this._QuestionTypeIDS;
			}
			set
			{
				if ((this._QuestionTypeIDS != value))
				{
					this.OnQuestionTypeIDSChanging(value);
					this.SendPropertyChanging();
					this._QuestionTypeIDS = value;
					this.SendPropertyChanged("QuestionTypeIDS");
					this.OnQuestionTypeIDSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuestionTypeCount", DbType="NVarChar(MAX)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=22)]
		public string QuestionTypeCount
		{
			get
			{
				return this._QuestionTypeCount;
			}
			set
			{
				if ((this._QuestionTypeCount != value))
				{
					this.OnQuestionTypeCountChanging(value);
					this.SendPropertyChanging();
					this._QuestionTypeCount = value;
					this.SendPropertyChanged("QuestionTypeCount");
					this.OnQuestionTypeCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BasicExamInfo_RandomExamInfo", Storage="_RandomExamInfo", ThisKey="BasicExamID", OtherKey="BasicExamID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=23, EmitDefaultValue=false)]
		public EntitySet<RandomExamInfo> RandomExamInfo
		{
			get
			{
				if ((this.serializing 
							&& (this._RandomExamInfo.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._RandomExamInfo;
			}
			set
			{
				this._RandomExamInfo.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CourseInfo_BasicExamInfo", Storage="_CourseInfo", ThisKey="CourseID", OtherKey="CourseID", IsForeignKey=true)]
		public CourseInfo CourseInfo
		{
			get
			{
				return this._CourseInfo.Entity;
			}
			set
			{
				CourseInfo previousValue = this._CourseInfo.Entity;
				if (((previousValue != value) 
							|| (this._CourseInfo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CourseInfo.Entity = null;
						previousValue.BasicExamInfo.Remove(this);
					}
					this._CourseInfo.Entity = value;
					if ((value != null))
					{
						value.BasicExamInfo.Add(this);
						this._CourseID = value.CourseID;
					}
					else
					{
						this._CourseID = default(int);
					}
					this.SendPropertyChanged("CourseInfo");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_RandomExamInfo(RandomExamInfo entity)
		{
			this.SendPropertyChanging();
			entity.BasicExamInfo = this;
		}
		
		private void detach_RandomExamInfo(RandomExamInfo entity)
		{
			this.SendPropertyChanging();
			entity.BasicExamInfo = null;
		}
		
		private void Initialize()
		{
			this._RandomExamInfo = new EntitySet<RandomExamInfo>(new Action<RandomExamInfo>(this.attach_RandomExamInfo), new Action<RandomExamInfo>(this.detach_RandomExamInfo));
			this._CourseInfo = default(EntityRef<CourseInfo>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ChapterInfo")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class ChapterInfo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ChapterID;
		
		private string _Title;
		
		private int _CourseID;
		
		private string _ChapterDesc;
		
		private EntitySet<JudgeInfo> _JudgeInfo;
		
		private EntitySet<SelectChoiceInfo> _SelectChoiceInfo;
		
		private EntityRef<CourseInfo> _CourseInfo;
		
		private bool serializing;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnChapterIDChanging(int value);
    partial void OnChapterIDChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnCourseIDChanging(int value);
    partial void OnCourseIDChanged();
    partial void OnChapterDescChanging(string value);
    partial void OnChapterDescChanged();
    #endregion
		
		public ChapterInfo()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChapterID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int ChapterID
		{
			get
			{
				return this._ChapterID;
			}
			set
			{
				if ((this._ChapterID != value))
				{
					this.OnChapterIDChanging(value);
					this.SendPropertyChanging();
					this._ChapterID = value;
					this.SendPropertyChanged("ChapterID");
					this.OnChapterIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CourseID", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public int CourseID
		{
			get
			{
				return this._CourseID;
			}
			set
			{
				if ((this._CourseID != value))
				{
					if (this._CourseInfo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCourseIDChanging(value);
					this.SendPropertyChanging();
					this._CourseID = value;
					this.SendPropertyChanged("CourseID");
					this.OnCourseIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChapterDesc", DbType="NVarChar(MAX)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public string ChapterDesc
		{
			get
			{
				return this._ChapterDesc;
			}
			set
			{
				if ((this._ChapterDesc != value))
				{
					this.OnChapterDescChanging(value);
					this.SendPropertyChanging();
					this._ChapterDesc = value;
					this.SendPropertyChanged("ChapterDesc");
					this.OnChapterDescChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ChapterInfo_JudgeInfo", Storage="_JudgeInfo", ThisKey="ChapterID", OtherKey="ChapterID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5, EmitDefaultValue=false)]
		public EntitySet<JudgeInfo> JudgeInfo
		{
			get
			{
				if ((this.serializing 
							&& (this._JudgeInfo.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._JudgeInfo;
			}
			set
			{
				this._JudgeInfo.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ChapterInfo_SelectChoiceInfo", Storage="_SelectChoiceInfo", ThisKey="ChapterID", OtherKey="ChapterID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6, EmitDefaultValue=false)]
		public EntitySet<SelectChoiceInfo> SelectChoiceInfo
		{
			get
			{
				if ((this.serializing 
							&& (this._SelectChoiceInfo.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._SelectChoiceInfo;
			}
			set
			{
				this._SelectChoiceInfo.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CourseInfo_ChapterInfo", Storage="_CourseInfo", ThisKey="CourseID", OtherKey="CourseID", IsForeignKey=true)]
		public CourseInfo CourseInfo
		{
			get
			{
				return this._CourseInfo.Entity;
			}
			set
			{
				CourseInfo previousValue = this._CourseInfo.Entity;
				if (((previousValue != value) 
							|| (this._CourseInfo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CourseInfo.Entity = null;
						previousValue.ChapterInfo.Remove(this);
					}
					this._CourseInfo.Entity = value;
					if ((value != null))
					{
						value.ChapterInfo.Add(this);
						this._CourseID = value.CourseID;
					}
					else
					{
						this._CourseID = default(int);
					}
					this.SendPropertyChanged("CourseInfo");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_JudgeInfo(JudgeInfo entity)
		{
			this.SendPropertyChanging();
			entity.ChapterInfo = this;
		}
		
		private void detach_JudgeInfo(JudgeInfo entity)
		{
			this.SendPropertyChanging();
			entity.ChapterInfo = null;
		}
		
		private void attach_SelectChoiceInfo(SelectChoiceInfo entity)
		{
			this.SendPropertyChanging();
			entity.ChapterInfo = this;
		}
		
		private void detach_SelectChoiceInfo(SelectChoiceInfo entity)
		{
			this.SendPropertyChanging();
			entity.ChapterInfo = null;
		}
		
		private void Initialize()
		{
			this._JudgeInfo = new EntitySet<JudgeInfo>(new Action<JudgeInfo>(this.attach_JudgeInfo), new Action<JudgeInfo>(this.detach_JudgeInfo));
			this._SelectChoiceInfo = new EntitySet<SelectChoiceInfo>(new Action<SelectChoiceInfo>(this.attach_SelectChoiceInfo), new Action<SelectChoiceInfo>(this.detach_SelectChoiceInfo));
			this._CourseInfo = default(EntityRef<CourseInfo>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ChoiceItemInfo")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class ChoiceItemInfo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ChoiceItemID;
		
		private string _Title;
		
		private int _SelectChoiceID;
		
		private bool _IsRight;
		
		private EntityRef<SelectChoiceInfo> _SelectChoiceInfo;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnChoiceItemIDChanging(int value);
    partial void OnChoiceItemIDChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnSelectChoiceIDChanging(int value);
    partial void OnSelectChoiceIDChanged();
    partial void OnIsRightChanging(bool value);
    partial void OnIsRightChanged();
    #endregion
		
		public ChoiceItemInfo()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChoiceItemID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int ChoiceItemID
		{
			get
			{
				return this._ChoiceItemID;
			}
			set
			{
				if ((this._ChoiceItemID != value))
				{
					this.OnChoiceItemIDChanging(value);
					this.SendPropertyChanging();
					this._ChoiceItemID = value;
					this.SendPropertyChanged("ChoiceItemID");
					this.OnChoiceItemIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SelectChoiceID", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public int SelectChoiceID
		{
			get
			{
				return this._SelectChoiceID;
			}
			set
			{
				if ((this._SelectChoiceID != value))
				{
					if (this._SelectChoiceInfo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSelectChoiceIDChanging(value);
					this.SendPropertyChanging();
					this._SelectChoiceID = value;
					this.SendPropertyChanged("SelectChoiceID");
					this.OnSelectChoiceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsRight", DbType="Bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public bool IsRight
		{
			get
			{
				return this._IsRight;
			}
			set
			{
				if ((this._IsRight != value))
				{
					this.OnIsRightChanging(value);
					this.SendPropertyChanging();
					this._IsRight = value;
					this.SendPropertyChanged("IsRight");
					this.OnIsRightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SelectChoiceInfo_ChoiceItemInfo", Storage="_SelectChoiceInfo", ThisKey="SelectChoiceID", OtherKey="SelectChoiceID", IsForeignKey=true)]
		public SelectChoiceInfo SelectChoiceInfo
		{
			get
			{
				return this._SelectChoiceInfo.Entity;
			}
			set
			{
				SelectChoiceInfo previousValue = this._SelectChoiceInfo.Entity;
				if (((previousValue != value) 
							|| (this._SelectChoiceInfo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SelectChoiceInfo.Entity = null;
						previousValue.ChoiceItemInfo.Remove(this);
					}
					this._SelectChoiceInfo.Entity = value;
					if ((value != null))
					{
						value.ChoiceItemInfo.Add(this);
						this._SelectChoiceID = value.SelectChoiceID;
					}
					else
					{
						this._SelectChoiceID = default(int);
					}
					this.SendPropertyChanged("SelectChoiceInfo");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._SelectChoiceInfo = default(EntityRef<SelectChoiceInfo>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ClassInfo")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class ClassInfo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ClassID;
		
		private string _ClassName;
		
		private System.Nullable<int> _StuCount;
		
		private int _MajorID;
		
		private System.Nullable<int> _DepartmentID;
		
		private EntitySet<ExamResultInfo> _ExamResultInfo;
		
		private EntityRef<MajorInfo> _MajorInfo;
		
		private bool serializing;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnClassIDChanging(int value);
    partial void OnClassIDChanged();
    partial void OnClassNameChanging(string value);
    partial void OnClassNameChanged();
    partial void OnStuCountChanging(System.Nullable<int> value);
    partial void OnStuCountChanged();
    partial void OnMajorIDChanging(int value);
    partial void OnMajorIDChanged();
    partial void OnDepartmentIDChanging(System.Nullable<int> value);
    partial void OnDepartmentIDChanged();
    #endregion
		
		public ClassInfo()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int ClassID
		{
			get
			{
				return this._ClassID;
			}
			set
			{
				if ((this._ClassID != value))
				{
					this.OnClassIDChanging(value);
					this.SendPropertyChanging();
					this._ClassID = value;
					this.SendPropertyChanged("ClassID");
					this.OnClassIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassName", DbType="NVarChar(MAX)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string ClassName
		{
			get
			{
				return this._ClassName;
			}
			set
			{
				if ((this._ClassName != value))
				{
					this.OnClassNameChanging(value);
					this.SendPropertyChanging();
					this._ClassName = value;
					this.SendPropertyChanged("ClassName");
					this.OnClassNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StuCount", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public System.Nullable<int> StuCount
		{
			get
			{
				return this._StuCount;
			}
			set
			{
				if ((this._StuCount != value))
				{
					this.OnStuCountChanging(value);
					this.SendPropertyChanging();
					this._StuCount = value;
					this.SendPropertyChanged("StuCount");
					this.OnStuCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MajorID", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public int MajorID
		{
			get
			{
				return this._MajorID;
			}
			set
			{
				if ((this._MajorID != value))
				{
					if (this._MajorInfo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMajorIDChanging(value);
					this.SendPropertyChanging();
					this._MajorID = value;
					this.SendPropertyChanged("MajorID");
					this.OnMajorIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartmentID", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public System.Nullable<int> DepartmentID
		{
			get
			{
				return this._DepartmentID;
			}
			set
			{
				if ((this._DepartmentID != value))
				{
					this.OnDepartmentIDChanging(value);
					this.SendPropertyChanging();
					this._DepartmentID = value;
					this.SendPropertyChanged("DepartmentID");
					this.OnDepartmentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ClassInfo_ExamResultInfo", Storage="_ExamResultInfo", ThisKey="ClassID", OtherKey="ClassID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6, EmitDefaultValue=false)]
		public EntitySet<ExamResultInfo> ExamResultInfo
		{
			get
			{
				if ((this.serializing 
							&& (this._ExamResultInfo.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._ExamResultInfo;
			}
			set
			{
				this._ExamResultInfo.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MajorInfo_ClassInfo", Storage="_MajorInfo", ThisKey="MajorID", OtherKey="MajorID", IsForeignKey=true)]
		public MajorInfo MajorInfo
		{
			get
			{
				return this._MajorInfo.Entity;
			}
			set
			{
				MajorInfo previousValue = this._MajorInfo.Entity;
				if (((previousValue != value) 
							|| (this._MajorInfo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MajorInfo.Entity = null;
						previousValue.ClassInfo.Remove(this);
					}
					this._MajorInfo.Entity = value;
					if ((value != null))
					{
						value.ClassInfo.Add(this);
						this._MajorID = value.MajorID;
					}
					else
					{
						this._MajorID = default(int);
					}
					this.SendPropertyChanged("MajorInfo");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ExamResultInfo(ExamResultInfo entity)
		{
			this.SendPropertyChanging();
			entity.ClassInfo = this;
		}
		
		private void detach_ExamResultInfo(ExamResultInfo entity)
		{
			this.SendPropertyChanging();
			entity.ClassInfo = null;
		}
		
		private void Initialize()
		{
			this._ExamResultInfo = new EntitySet<ExamResultInfo>(new Action<ExamResultInfo>(this.attach_ExamResultInfo), new Action<ExamResultInfo>(this.detach_ExamResultInfo));
			this._MajorInfo = default(EntityRef<MajorInfo>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CourseInfo")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class CourseInfo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CourseID;
		
		private string _Title;
		
		private int _MajorID;
		
		private int _DepartmentID;
		
		private string _CourseDesc;
		
		private System.Nullable<int> _CreditHour;
		
		private string _ClassHour;
		
		private int _ChargeTeacherID;
		
		private EntitySet<BasicExamInfo> _BasicExamInfo;
		
		private EntitySet<ChapterInfo> _ChapterInfo;
		
		private EntitySet<ExamResultInfo> _ExamResultInfo;
		
		private EntitySet<JudgeInfo> _JudgeInfo;
		
		private EntitySet<KnowledgePointInfo> _KnowledgePointInfo;
		
		private EntitySet<QuestionInfo> _QuestionInfo;
		
		private EntitySet<SelectChoiceInfo> _SelectChoiceInfo;
		
		private bool serializing;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCourseIDChanging(int value);
    partial void OnCourseIDChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnMajorIDChanging(int value);
    partial void OnMajorIDChanged();
    partial void OnDepartmentIDChanging(int value);
    partial void OnDepartmentIDChanged();
    partial void OnCourseDescChanging(string value);
    partial void OnCourseDescChanged();
    partial void OnCreditHourChanging(System.Nullable<int> value);
    partial void OnCreditHourChanged();
    partial void OnClassHourChanging(string value);
    partial void OnClassHourChanged();
    partial void OnChargeTeacherIDChanging(int value);
    partial void OnChargeTeacherIDChanged();
    #endregion
		
		public CourseInfo()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CourseID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int CourseID
		{
			get
			{
				return this._CourseID;
			}
			set
			{
				if ((this._CourseID != value))
				{
					this.OnCourseIDChanging(value);
					this.SendPropertyChanging();
					this._CourseID = value;
					this.SendPropertyChanged("CourseID");
					this.OnCourseIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MajorID", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public int MajorID
		{
			get
			{
				return this._MajorID;
			}
			set
			{
				if ((this._MajorID != value))
				{
					this.OnMajorIDChanging(value);
					this.SendPropertyChanging();
					this._MajorID = value;
					this.SendPropertyChanged("MajorID");
					this.OnMajorIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartmentID", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public int DepartmentID
		{
			get
			{
				return this._DepartmentID;
			}
			set
			{
				if ((this._DepartmentID != value))
				{
					this.OnDepartmentIDChanging(value);
					this.SendPropertyChanging();
					this._DepartmentID = value;
					this.SendPropertyChanged("DepartmentID");
					this.OnDepartmentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CourseDesc", DbType="NVarChar(MAX)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public string CourseDesc
		{
			get
			{
				return this._CourseDesc;
			}
			set
			{
				if ((this._CourseDesc != value))
				{
					this.OnCourseDescChanging(value);
					this.SendPropertyChanging();
					this._CourseDesc = value;
					this.SendPropertyChanged("CourseDesc");
					this.OnCourseDescChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreditHour", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public System.Nullable<int> CreditHour
		{
			get
			{
				return this._CreditHour;
			}
			set
			{
				if ((this._CreditHour != value))
				{
					this.OnCreditHourChanging(value);
					this.SendPropertyChanging();
					this._CreditHour = value;
					this.SendPropertyChanged("CreditHour");
					this.OnCreditHourChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassHour", DbType="NChar(10)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public string ClassHour
		{
			get
			{
				return this._ClassHour;
			}
			set
			{
				if ((this._ClassHour != value))
				{
					this.OnClassHourChanging(value);
					this.SendPropertyChanging();
					this._ClassHour = value;
					this.SendPropertyChanged("ClassHour");
					this.OnClassHourChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChargeTeacherID", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public int ChargeTeacherID
		{
			get
			{
				return this._ChargeTeacherID;
			}
			set
			{
				if ((this._ChargeTeacherID != value))
				{
					this.OnChargeTeacherIDChanging(value);
					this.SendPropertyChanging();
					this._ChargeTeacherID = value;
					this.SendPropertyChanged("ChargeTeacherID");
					this.OnChargeTeacherIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CourseInfo_BasicExamInfo", Storage="_BasicExamInfo", ThisKey="CourseID", OtherKey="CourseID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9, EmitDefaultValue=false)]
		public EntitySet<BasicExamInfo> BasicExamInfo
		{
			get
			{
				if ((this.serializing 
							&& (this._BasicExamInfo.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._BasicExamInfo;
			}
			set
			{
				this._BasicExamInfo.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CourseInfo_ChapterInfo", Storage="_ChapterInfo", ThisKey="CourseID", OtherKey="CourseID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10, EmitDefaultValue=false)]
		public EntitySet<ChapterInfo> ChapterInfo
		{
			get
			{
				if ((this.serializing 
							&& (this._ChapterInfo.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._ChapterInfo;
			}
			set
			{
				this._ChapterInfo.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CourseInfo_ExamResultInfo", Storage="_ExamResultInfo", ThisKey="CourseID", OtherKey="CourseID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=11, EmitDefaultValue=false)]
		public EntitySet<ExamResultInfo> ExamResultInfo
		{
			get
			{
				if ((this.serializing 
							&& (this._ExamResultInfo.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._ExamResultInfo;
			}
			set
			{
				this._ExamResultInfo.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CourseInfo_JudgeInfo", Storage="_JudgeInfo", ThisKey="CourseID", OtherKey="CourseID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=12, EmitDefaultValue=false)]
		public EntitySet<JudgeInfo> JudgeInfo
		{
			get
			{
				if ((this.serializing 
							&& (this._JudgeInfo.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._JudgeInfo;
			}
			set
			{
				this._JudgeInfo.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CourseInfo_KnowledgePointInfo", Storage="_KnowledgePointInfo", ThisKey="CourseID", OtherKey="CourseID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=13, EmitDefaultValue=false)]
		public EntitySet<KnowledgePointInfo> KnowledgePointInfo
		{
			get
			{
				if ((this.serializing 
							&& (this._KnowledgePointInfo.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._KnowledgePointInfo;
			}
			set
			{
				this._KnowledgePointInfo.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CourseInfo_QuestionInfo", Storage="_QuestionInfo", ThisKey="CourseID", OtherKey="CourseID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=14, EmitDefaultValue=false)]
		public EntitySet<QuestionInfo> QuestionInfo
		{
			get
			{
				if ((this.serializing 
							&& (this._QuestionInfo.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._QuestionInfo;
			}
			set
			{
				this._QuestionInfo.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CourseInfo_SelectChoiceInfo", Storage="_SelectChoiceInfo", ThisKey="CourseID", OtherKey="CourseID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=15, EmitDefaultValue=false)]
		public EntitySet<SelectChoiceInfo> SelectChoiceInfo
		{
			get
			{
				if ((this.serializing 
							&& (this._SelectChoiceInfo.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._SelectChoiceInfo;
			}
			set
			{
				this._SelectChoiceInfo.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BasicExamInfo(BasicExamInfo entity)
		{
			this.SendPropertyChanging();
			entity.CourseInfo = this;
		}
		
		private void detach_BasicExamInfo(BasicExamInfo entity)
		{
			this.SendPropertyChanging();
			entity.CourseInfo = null;
		}
		
		private void attach_ChapterInfo(ChapterInfo entity)
		{
			this.SendPropertyChanging();
			entity.CourseInfo = this;
		}
		
		private void detach_ChapterInfo(ChapterInfo entity)
		{
			this.SendPropertyChanging();
			entity.CourseInfo = null;
		}
		
		private void attach_ExamResultInfo(ExamResultInfo entity)
		{
			this.SendPropertyChanging();
			entity.CourseInfo = this;
		}
		
		private void detach_ExamResultInfo(ExamResultInfo entity)
		{
			this.SendPropertyChanging();
			entity.CourseInfo = null;
		}
		
		private void attach_JudgeInfo(JudgeInfo entity)
		{
			this.SendPropertyChanging();
			entity.CourseInfo = this;
		}
		
		private void detach_JudgeInfo(JudgeInfo entity)
		{
			this.SendPropertyChanging();
			entity.CourseInfo = null;
		}
		
		private void attach_KnowledgePointInfo(KnowledgePointInfo entity)
		{
			this.SendPropertyChanging();
			entity.CourseInfo = this;
		}
		
		private void detach_KnowledgePointInfo(KnowledgePointInfo entity)
		{
			this.SendPropertyChanging();
			entity.CourseInfo = null;
		}
		
		private void attach_QuestionInfo(QuestionInfo entity)
		{
			this.SendPropertyChanging();
			entity.CourseInfo = this;
		}
		
		private void detach_QuestionInfo(QuestionInfo entity)
		{
			this.SendPropertyChanging();
			entity.CourseInfo = null;
		}
		
		private void attach_SelectChoiceInfo(SelectChoiceInfo entity)
		{
			this.SendPropertyChanging();
			entity.CourseInfo = this;
		}
		
		private void detach_SelectChoiceInfo(SelectChoiceInfo entity)
		{
			this.SendPropertyChanging();
			entity.CourseInfo = null;
		}
		
		private void Initialize()
		{
			this._BasicExamInfo = new EntitySet<BasicExamInfo>(new Action<BasicExamInfo>(this.attach_BasicExamInfo), new Action<BasicExamInfo>(this.detach_BasicExamInfo));
			this._ChapterInfo = new EntitySet<ChapterInfo>(new Action<ChapterInfo>(this.attach_ChapterInfo), new Action<ChapterInfo>(this.detach_ChapterInfo));
			this._ExamResultInfo = new EntitySet<ExamResultInfo>(new Action<ExamResultInfo>(this.attach_ExamResultInfo), new Action<ExamResultInfo>(this.detach_ExamResultInfo));
			this._JudgeInfo = new EntitySet<JudgeInfo>(new Action<JudgeInfo>(this.attach_JudgeInfo), new Action<JudgeInfo>(this.detach_JudgeInfo));
			this._KnowledgePointInfo = new EntitySet<KnowledgePointInfo>(new Action<KnowledgePointInfo>(this.attach_KnowledgePointInfo), new Action<KnowledgePointInfo>(this.detach_KnowledgePointInfo));
			this._QuestionInfo = new EntitySet<QuestionInfo>(new Action<QuestionInfo>(this.attach_QuestionInfo), new Action<QuestionInfo>(this.detach_QuestionInfo));
			this._SelectChoiceInfo = new EntitySet<SelectChoiceInfo>(new Action<SelectChoiceInfo>(this.attach_SelectChoiceInfo), new Action<SelectChoiceInfo>(this.detach_SelectChoiceInfo));
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DepartmentInfo")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class DepartmentInfo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _DepartmentID;
		
		private string _DepartmentName;
		
		private string _Description;
		
		private bool _IsTeachingDept;
		
		private EntitySet<AdminUserInfo> _AdminUserInfo;
		
		private EntitySet<MajorInfo> _MajorInfo;
		
		private EntitySet<MessageInfo> _MessageInfo;
		
		private EntitySet<NoticeInfo> _NoticeInfo;
		
		private EntitySet<StudentInfo> _StudentInfo;
		
		private EntitySet<SubjectInfo> _SubjectInfo;
		
		private EntitySet<TeacherInfo> _TeacherInfo;
		
		private bool serializing;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDepartmentIDChanging(int value);
    partial void OnDepartmentIDChanged();
    partial void OnDepartmentNameChanging(string value);
    partial void OnDepartmentNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnIsTeachingDeptChanging(bool value);
    partial void OnIsTeachingDeptChanged();
    #endregion
		
		public DepartmentInfo()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartmentID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int DepartmentID
		{
			get
			{
				return this._DepartmentID;
			}
			set
			{
				if ((this._DepartmentID != value))
				{
					this.OnDepartmentIDChanging(value);
					this.SendPropertyChanging();
					this._DepartmentID = value;
					this.SendPropertyChanged("DepartmentID");
					this.OnDepartmentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartmentName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string DepartmentName
		{
			get
			{
				return this._DepartmentName;
			}
			set
			{
				if ((this._DepartmentName != value))
				{
					this.OnDepartmentNameChanging(value);
					this.SendPropertyChanging();
					this._DepartmentName = value;
					this.SendPropertyChanged("DepartmentName");
					this.OnDepartmentNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsTeachingDept", DbType="Bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public bool IsTeachingDept
		{
			get
			{
				return this._IsTeachingDept;
			}
			set
			{
				if ((this._IsTeachingDept != value))
				{
					this.OnIsTeachingDeptChanging(value);
					this.SendPropertyChanging();
					this._IsTeachingDept = value;
					this.SendPropertyChanged("IsTeachingDept");
					this.OnIsTeachingDeptChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DepartmentInfo_AdminUserInfo", Storage="_AdminUserInfo", ThisKey="DepartmentID", OtherKey="DepartmentID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5, EmitDefaultValue=false)]
		public EntitySet<AdminUserInfo> AdminUserInfo
		{
			get
			{
				if ((this.serializing 
							&& (this._AdminUserInfo.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._AdminUserInfo;
			}
			set
			{
				this._AdminUserInfo.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DepartmentInfo_MajorInfo", Storage="_MajorInfo", ThisKey="DepartmentID", OtherKey="DepartmentID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6, EmitDefaultValue=false)]
		public EntitySet<MajorInfo> MajorInfo
		{
			get
			{
				if ((this.serializing 
							&& (this._MajorInfo.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._MajorInfo;
			}
			set
			{
				this._MajorInfo.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DepartmentInfo_MessageInfo", Storage="_MessageInfo", ThisKey="DepartmentID", OtherKey="DepartmentID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7, EmitDefaultValue=false)]
		public EntitySet<MessageInfo> MessageInfo
		{
			get
			{
				if ((this.serializing 
							&& (this._MessageInfo.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._MessageInfo;
			}
			set
			{
				this._MessageInfo.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DepartmentInfo_NoticeInfo", Storage="_NoticeInfo", ThisKey="DepartmentID", OtherKey="DepartmentID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8, EmitDefaultValue=false)]
		public EntitySet<NoticeInfo> NoticeInfo
		{
			get
			{
				if ((this.serializing 
							&& (this._NoticeInfo.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._NoticeInfo;
			}
			set
			{
				this._NoticeInfo.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DepartmentInfo_StudentInfo", Storage="_StudentInfo", ThisKey="DepartmentID", OtherKey="DepartmentID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9, EmitDefaultValue=false)]
		public EntitySet<StudentInfo> StudentInfo
		{
			get
			{
				if ((this.serializing 
							&& (this._StudentInfo.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._StudentInfo;
			}
			set
			{
				this._StudentInfo.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DepartmentInfo_SubjectInfo", Storage="_SubjectInfo", ThisKey="DepartmentID", OtherKey="DepartmentID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10, EmitDefaultValue=false)]
		public EntitySet<SubjectInfo> SubjectInfo
		{
			get
			{
				if ((this.serializing 
							&& (this._SubjectInfo.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._SubjectInfo;
			}
			set
			{
				this._SubjectInfo.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DepartmentInfo_TeacherInfo", Storage="_TeacherInfo", ThisKey="DepartmentID", OtherKey="DepartmentID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=11, EmitDefaultValue=false)]
		public EntitySet<TeacherInfo> TeacherInfo
		{
			get
			{
				if ((this.serializing 
							&& (this._TeacherInfo.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._TeacherInfo;
			}
			set
			{
				this._TeacherInfo.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_AdminUserInfo(AdminUserInfo entity)
		{
			this.SendPropertyChanging();
			entity.DepartmentInfo = this;
		}
		
		private void detach_AdminUserInfo(AdminUserInfo entity)
		{
			this.SendPropertyChanging();
			entity.DepartmentInfo = null;
		}
		
		private void attach_MajorInfo(MajorInfo entity)
		{
			this.SendPropertyChanging();
			entity.DepartmentInfo = this;
		}
		
		private void detach_MajorInfo(MajorInfo entity)
		{
			this.SendPropertyChanging();
			entity.DepartmentInfo = null;
		}
		
		private void attach_MessageInfo(MessageInfo entity)
		{
			this.SendPropertyChanging();
			entity.DepartmentInfo = this;
		}
		
		private void detach_MessageInfo(MessageInfo entity)
		{
			this.SendPropertyChanging();
			entity.DepartmentInfo = null;
		}
		
		private void attach_NoticeInfo(NoticeInfo entity)
		{
			this.SendPropertyChanging();
			entity.DepartmentInfo = this;
		}
		
		private void detach_NoticeInfo(NoticeInfo entity)
		{
			this.SendPropertyChanging();
			entity.DepartmentInfo = null;
		}
		
		private void attach_StudentInfo(StudentInfo entity)
		{
			this.SendPropertyChanging();
			entity.DepartmentInfo = this;
		}
		
		private void detach_StudentInfo(StudentInfo entity)
		{
			this.SendPropertyChanging();
			entity.DepartmentInfo = null;
		}
		
		private void attach_SubjectInfo(SubjectInfo entity)
		{
			this.SendPropertyChanging();
			entity.DepartmentInfo = this;
		}
		
		private void detach_SubjectInfo(SubjectInfo entity)
		{
			this.SendPropertyChanging();
			entity.DepartmentInfo = null;
		}
		
		private void attach_TeacherInfo(TeacherInfo entity)
		{
			this.SendPropertyChanging();
			entity.DepartmentInfo = this;
		}
		
		private void detach_TeacherInfo(TeacherInfo entity)
		{
			this.SendPropertyChanging();
			entity.DepartmentInfo = null;
		}
		
		private void Initialize()
		{
			this._AdminUserInfo = new EntitySet<AdminUserInfo>(new Action<AdminUserInfo>(this.attach_AdminUserInfo), new Action<AdminUserInfo>(this.detach_AdminUserInfo));
			this._MajorInfo = new EntitySet<MajorInfo>(new Action<MajorInfo>(this.attach_MajorInfo), new Action<MajorInfo>(this.detach_MajorInfo));
			this._MessageInfo = new EntitySet<MessageInfo>(new Action<MessageInfo>(this.attach_MessageInfo), new Action<MessageInfo>(this.detach_MessageInfo));
			this._NoticeInfo = new EntitySet<NoticeInfo>(new Action<NoticeInfo>(this.attach_NoticeInfo), new Action<NoticeInfo>(this.detach_NoticeInfo));
			this._StudentInfo = new EntitySet<StudentInfo>(new Action<StudentInfo>(this.attach_StudentInfo), new Action<StudentInfo>(this.detach_StudentInfo));
			this._SubjectInfo = new EntitySet<SubjectInfo>(new Action<SubjectInfo>(this.attach_SubjectInfo), new Action<SubjectInfo>(this.detach_SubjectInfo));
			this._TeacherInfo = new EntitySet<TeacherInfo>(new Action<TeacherInfo>(this.attach_TeacherInfo), new Action<TeacherInfo>(this.detach_TeacherInfo));
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ExamResultInfo")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class ExamResultInfo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ExamResultID;
		
		private int _ClassID;
		
		private int _CourseID;
		
		private int _PassedRate;
		
		private int _ExcellentRate;
		
		private int _AverageMark;
		
		private int _Sum90;
		
		private int _Sum80;
		
		private int _Sum70;
		
		private int _Sum60;
		
		private int _Sum40And50;
		
		private int _Sum40;
		
		private EntityRef<ClassInfo> _ClassInfo;
		
		private EntityRef<CourseInfo> _CourseInfo;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnExamResultIDChanging(int value);
    partial void OnExamResultIDChanged();
    partial void OnClassIDChanging(int value);
    partial void OnClassIDChanged();
    partial void OnCourseIDChanging(int value);
    partial void OnCourseIDChanged();
    partial void OnPassedRateChanging(int value);
    partial void OnPassedRateChanged();
    partial void OnExcellentRateChanging(int value);
    partial void OnExcellentRateChanged();
    partial void OnAverageMarkChanging(int value);
    partial void OnAverageMarkChanged();
    partial void OnSum90Changing(int value);
    partial void OnSum90Changed();
    partial void OnSum80Changing(int value);
    partial void OnSum80Changed();
    partial void OnSum70Changing(int value);
    partial void OnSum70Changed();
    partial void OnSum60Changing(int value);
    partial void OnSum60Changed();
    partial void OnSum40And50Changing(int value);
    partial void OnSum40And50Changed();
    partial void OnSum40Changing(int value);
    partial void OnSum40Changed();
    #endregion
		
		public ExamResultInfo()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExamResultID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int ExamResultID
		{
			get
			{
				return this._ExamResultID;
			}
			set
			{
				if ((this._ExamResultID != value))
				{
					this.OnExamResultIDChanging(value);
					this.SendPropertyChanging();
					this._ExamResultID = value;
					this.SendPropertyChanged("ExamResultID");
					this.OnExamResultIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassID", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int ClassID
		{
			get
			{
				return this._ClassID;
			}
			set
			{
				if ((this._ClassID != value))
				{
					if (this._ClassInfo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnClassIDChanging(value);
					this.SendPropertyChanging();
					this._ClassID = value;
					this.SendPropertyChanged("ClassID");
					this.OnClassIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CourseID", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public int CourseID
		{
			get
			{
				return this._CourseID;
			}
			set
			{
				if ((this._CourseID != value))
				{
					if (this._CourseInfo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCourseIDChanging(value);
					this.SendPropertyChanging();
					this._CourseID = value;
					this.SendPropertyChanged("CourseID");
					this.OnCourseIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PassedRate", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public int PassedRate
		{
			get
			{
				return this._PassedRate;
			}
			set
			{
				if ((this._PassedRate != value))
				{
					this.OnPassedRateChanging(value);
					this.SendPropertyChanging();
					this._PassedRate = value;
					this.SendPropertyChanged("PassedRate");
					this.OnPassedRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExcellentRate", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public int ExcellentRate
		{
			get
			{
				return this._ExcellentRate;
			}
			set
			{
				if ((this._ExcellentRate != value))
				{
					this.OnExcellentRateChanging(value);
					this.SendPropertyChanging();
					this._ExcellentRate = value;
					this.SendPropertyChanged("ExcellentRate");
					this.OnExcellentRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AverageMark", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public int AverageMark
		{
			get
			{
				return this._AverageMark;
			}
			set
			{
				if ((this._AverageMark != value))
				{
					this.OnAverageMarkChanging(value);
					this.SendPropertyChanging();
					this._AverageMark = value;
					this.SendPropertyChanged("AverageMark");
					this.OnAverageMarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sum90", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public int Sum90
		{
			get
			{
				return this._Sum90;
			}
			set
			{
				if ((this._Sum90 != value))
				{
					this.OnSum90Changing(value);
					this.SendPropertyChanging();
					this._Sum90 = value;
					this.SendPropertyChanged("Sum90");
					this.OnSum90Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sum80", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public int Sum80
		{
			get
			{
				return this._Sum80;
			}
			set
			{
				if ((this._Sum80 != value))
				{
					this.OnSum80Changing(value);
					this.SendPropertyChanging();
					this._Sum80 = value;
					this.SendPropertyChanged("Sum80");
					this.OnSum80Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sum70", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public int Sum70
		{
			get
			{
				return this._Sum70;
			}
			set
			{
				if ((this._Sum70 != value))
				{
					this.OnSum70Changing(value);
					this.SendPropertyChanging();
					this._Sum70 = value;
					this.SendPropertyChanged("Sum70");
					this.OnSum70Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sum60", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10)]
		public int Sum60
		{
			get
			{
				return this._Sum60;
			}
			set
			{
				if ((this._Sum60 != value))
				{
					this.OnSum60Changing(value);
					this.SendPropertyChanging();
					this._Sum60 = value;
					this.SendPropertyChanged("Sum60");
					this.OnSum60Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sum40And50", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=11)]
		public int Sum40And50
		{
			get
			{
				return this._Sum40And50;
			}
			set
			{
				if ((this._Sum40And50 != value))
				{
					this.OnSum40And50Changing(value);
					this.SendPropertyChanging();
					this._Sum40And50 = value;
					this.SendPropertyChanged("Sum40And50");
					this.OnSum40And50Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sum40", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=12)]
		public int Sum40
		{
			get
			{
				return this._Sum40;
			}
			set
			{
				if ((this._Sum40 != value))
				{
					this.OnSum40Changing(value);
					this.SendPropertyChanging();
					this._Sum40 = value;
					this.SendPropertyChanged("Sum40");
					this.OnSum40Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ClassInfo_ExamResultInfo", Storage="_ClassInfo", ThisKey="ClassID", OtherKey="ClassID", IsForeignKey=true)]
		public ClassInfo ClassInfo
		{
			get
			{
				return this._ClassInfo.Entity;
			}
			set
			{
				ClassInfo previousValue = this._ClassInfo.Entity;
				if (((previousValue != value) 
							|| (this._ClassInfo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ClassInfo.Entity = null;
						previousValue.ExamResultInfo.Remove(this);
					}
					this._ClassInfo.Entity = value;
					if ((value != null))
					{
						value.ExamResultInfo.Add(this);
						this._ClassID = value.ClassID;
					}
					else
					{
						this._ClassID = default(int);
					}
					this.SendPropertyChanged("ClassInfo");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CourseInfo_ExamResultInfo", Storage="_CourseInfo", ThisKey="CourseID", OtherKey="CourseID", IsForeignKey=true)]
		public CourseInfo CourseInfo
		{
			get
			{
				return this._CourseInfo.Entity;
			}
			set
			{
				CourseInfo previousValue = this._CourseInfo.Entity;
				if (((previousValue != value) 
							|| (this._CourseInfo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CourseInfo.Entity = null;
						previousValue.ExamResultInfo.Remove(this);
					}
					this._CourseInfo.Entity = value;
					if ((value != null))
					{
						value.ExamResultInfo.Add(this);
						this._CourseID = value.CourseID;
					}
					else
					{
						this._CourseID = default(int);
					}
					this.SendPropertyChanged("CourseInfo");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._ClassInfo = default(EntityRef<ClassInfo>);
			this._CourseInfo = default(EntityRef<CourseInfo>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.JudgeInfo")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class JudgeInfo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _JudgeID;
		
		private string _Title;
		
		private bool _RightAnswer;
		
		private System.Nullable<int> _MajorID;
		
		private int _CourseID;
		
		private System.Nullable<int> _DifficultyLevel;
		
		private int _ChapterID;
		
		private EntityRef<ChapterInfo> _ChapterInfo;
		
		private EntityRef<CourseInfo> _CourseInfo;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnJudgeIDChanging(int value);
    partial void OnJudgeIDChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnRightAnswerChanging(bool value);
    partial void OnRightAnswerChanged();
    partial void OnMajorIDChanging(System.Nullable<int> value);
    partial void OnMajorIDChanged();
    partial void OnCourseIDChanging(int value);
    partial void OnCourseIDChanged();
    partial void OnDifficultyLevelChanging(System.Nullable<int> value);
    partial void OnDifficultyLevelChanged();
    partial void OnChapterIDChanging(int value);
    partial void OnChapterIDChanged();
    #endregion
		
		public JudgeInfo()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JudgeID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int JudgeID
		{
			get
			{
				return this._JudgeID;
			}
			set
			{
				if ((this._JudgeID != value))
				{
					this.OnJudgeIDChanging(value);
					this.SendPropertyChanging();
					this._JudgeID = value;
					this.SendPropertyChanged("JudgeID");
					this.OnJudgeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RightAnswer", DbType="Bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public bool RightAnswer
		{
			get
			{
				return this._RightAnswer;
			}
			set
			{
				if ((this._RightAnswer != value))
				{
					this.OnRightAnswerChanging(value);
					this.SendPropertyChanging();
					this._RightAnswer = value;
					this.SendPropertyChanged("RightAnswer");
					this.OnRightAnswerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MajorID", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public System.Nullable<int> MajorID
		{
			get
			{
				return this._MajorID;
			}
			set
			{
				if ((this._MajorID != value))
				{
					this.OnMajorIDChanging(value);
					this.SendPropertyChanging();
					this._MajorID = value;
					this.SendPropertyChanged("MajorID");
					this.OnMajorIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CourseID", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public int CourseID
		{
			get
			{
				return this._CourseID;
			}
			set
			{
				if ((this._CourseID != value))
				{
					if (this._CourseInfo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCourseIDChanging(value);
					this.SendPropertyChanging();
					this._CourseID = value;
					this.SendPropertyChanged("CourseID");
					this.OnCourseIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DifficultyLevel", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public System.Nullable<int> DifficultyLevel
		{
			get
			{
				return this._DifficultyLevel;
			}
			set
			{
				if ((this._DifficultyLevel != value))
				{
					this.OnDifficultyLevelChanging(value);
					this.SendPropertyChanging();
					this._DifficultyLevel = value;
					this.SendPropertyChanged("DifficultyLevel");
					this.OnDifficultyLevelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChapterID", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public int ChapterID
		{
			get
			{
				return this._ChapterID;
			}
			set
			{
				if ((this._ChapterID != value))
				{
					if (this._ChapterInfo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnChapterIDChanging(value);
					this.SendPropertyChanging();
					this._ChapterID = value;
					this.SendPropertyChanged("ChapterID");
					this.OnChapterIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ChapterInfo_JudgeInfo", Storage="_ChapterInfo", ThisKey="ChapterID", OtherKey="ChapterID", IsForeignKey=true)]
		public ChapterInfo ChapterInfo
		{
			get
			{
				return this._ChapterInfo.Entity;
			}
			set
			{
				ChapterInfo previousValue = this._ChapterInfo.Entity;
				if (((previousValue != value) 
							|| (this._ChapterInfo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ChapterInfo.Entity = null;
						previousValue.JudgeInfo.Remove(this);
					}
					this._ChapterInfo.Entity = value;
					if ((value != null))
					{
						value.JudgeInfo.Add(this);
						this._ChapterID = value.ChapterID;
					}
					else
					{
						this._ChapterID = default(int);
					}
					this.SendPropertyChanged("ChapterInfo");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CourseInfo_JudgeInfo", Storage="_CourseInfo", ThisKey="CourseID", OtherKey="CourseID", IsForeignKey=true)]
		public CourseInfo CourseInfo
		{
			get
			{
				return this._CourseInfo.Entity;
			}
			set
			{
				CourseInfo previousValue = this._CourseInfo.Entity;
				if (((previousValue != value) 
							|| (this._CourseInfo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CourseInfo.Entity = null;
						previousValue.JudgeInfo.Remove(this);
					}
					this._CourseInfo.Entity = value;
					if ((value != null))
					{
						value.JudgeInfo.Add(this);
						this._CourseID = value.CourseID;
					}
					else
					{
						this._CourseID = default(int);
					}
					this.SendPropertyChanged("CourseInfo");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._ChapterInfo = default(EntityRef<ChapterInfo>);
			this._CourseInfo = default(EntityRef<CourseInfo>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.KnowledgePointInfo")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class KnowledgePointInfo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _KnowledgePointID;
		
		private string _Title;
		
		private int _CourseID;
		
		private string _KPointDesc;
		
		private System.Nullable<int> _KPointImportance;
		
		private System.Nullable<int> _KPointType;
		
		private EntitySet<QuestionInfo> _QuestionInfo;
		
		private EntityRef<CourseInfo> _CourseInfo;
		
		private bool serializing;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnKnowledgePointIDChanging(int value);
    partial void OnKnowledgePointIDChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnCourseIDChanging(int value);
    partial void OnCourseIDChanged();
    partial void OnKPointDescChanging(string value);
    partial void OnKPointDescChanged();
    partial void OnKPointImportanceChanging(System.Nullable<int> value);
    partial void OnKPointImportanceChanged();
    partial void OnKPointTypeChanging(System.Nullable<int> value);
    partial void OnKPointTypeChanged();
    #endregion
		
		public KnowledgePointInfo()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KnowledgePointID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int KnowledgePointID
		{
			get
			{
				return this._KnowledgePointID;
			}
			set
			{
				if ((this._KnowledgePointID != value))
				{
					this.OnKnowledgePointIDChanging(value);
					this.SendPropertyChanging();
					this._KnowledgePointID = value;
					this.SendPropertyChanged("KnowledgePointID");
					this.OnKnowledgePointIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(MAX)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CourseID", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public int CourseID
		{
			get
			{
				return this._CourseID;
			}
			set
			{
				if ((this._CourseID != value))
				{
					if (this._CourseInfo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCourseIDChanging(value);
					this.SendPropertyChanging();
					this._CourseID = value;
					this.SendPropertyChanged("CourseID");
					this.OnCourseIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KPointDesc", DbType="NVarChar(MAX)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public string KPointDesc
		{
			get
			{
				return this._KPointDesc;
			}
			set
			{
				if ((this._KPointDesc != value))
				{
					this.OnKPointDescChanging(value);
					this.SendPropertyChanging();
					this._KPointDesc = value;
					this.SendPropertyChanged("KPointDesc");
					this.OnKPointDescChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KPointImportance", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public System.Nullable<int> KPointImportance
		{
			get
			{
				return this._KPointImportance;
			}
			set
			{
				if ((this._KPointImportance != value))
				{
					this.OnKPointImportanceChanging(value);
					this.SendPropertyChanging();
					this._KPointImportance = value;
					this.SendPropertyChanged("KPointImportance");
					this.OnKPointImportanceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KPointType", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public System.Nullable<int> KPointType
		{
			get
			{
				return this._KPointType;
			}
			set
			{
				if ((this._KPointType != value))
				{
					this.OnKPointTypeChanging(value);
					this.SendPropertyChanging();
					this._KPointType = value;
					this.SendPropertyChanged("KPointType");
					this.OnKPointTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KnowledgePointInfo_QuestionInfo", Storage="_QuestionInfo", ThisKey="KnowledgePointID", OtherKey="KPointID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7, EmitDefaultValue=false)]
		public EntitySet<QuestionInfo> QuestionInfo
		{
			get
			{
				if ((this.serializing 
							&& (this._QuestionInfo.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._QuestionInfo;
			}
			set
			{
				this._QuestionInfo.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CourseInfo_KnowledgePointInfo", Storage="_CourseInfo", ThisKey="CourseID", OtherKey="CourseID", IsForeignKey=true)]
		public CourseInfo CourseInfo
		{
			get
			{
				return this._CourseInfo.Entity;
			}
			set
			{
				CourseInfo previousValue = this._CourseInfo.Entity;
				if (((previousValue != value) 
							|| (this._CourseInfo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CourseInfo.Entity = null;
						previousValue.KnowledgePointInfo.Remove(this);
					}
					this._CourseInfo.Entity = value;
					if ((value != null))
					{
						value.KnowledgePointInfo.Add(this);
						this._CourseID = value.CourseID;
					}
					else
					{
						this._CourseID = default(int);
					}
					this.SendPropertyChanged("CourseInfo");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_QuestionInfo(QuestionInfo entity)
		{
			this.SendPropertyChanging();
			entity.KnowledgePointInfo = this;
		}
		
		private void detach_QuestionInfo(QuestionInfo entity)
		{
			this.SendPropertyChanging();
			entity.KnowledgePointInfo = null;
		}
		
		private void Initialize()
		{
			this._QuestionInfo = new EntitySet<QuestionInfo>(new Action<QuestionInfo>(this.attach_QuestionInfo), new Action<QuestionInfo>(this.detach_QuestionInfo));
			this._CourseInfo = default(EntityRef<CourseInfo>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LogInfo")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class LogInfo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _LogID;
		
		private string _LogTitle;
		
		private string _LogType;
		
		private System.DateTime _AddedTime;
		
		private string _LogContent;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLogIDChanging(int value);
    partial void OnLogIDChanged();
    partial void OnLogTitleChanging(string value);
    partial void OnLogTitleChanged();
    partial void OnLogTypeChanging(string value);
    partial void OnLogTypeChanged();
    partial void OnAddedTimeChanging(System.DateTime value);
    partial void OnAddedTimeChanged();
    partial void OnLogContentChanging(string value);
    partial void OnLogContentChanged();
    #endregion
		
		public LogInfo()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int LogID
		{
			get
			{
				return this._LogID;
			}
			set
			{
				if ((this._LogID != value))
				{
					this.OnLogIDChanging(value);
					this.SendPropertyChanging();
					this._LogID = value;
					this.SendPropertyChanged("LogID");
					this.OnLogIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogTitle", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string LogTitle
		{
			get
			{
				return this._LogTitle;
			}
			set
			{
				if ((this._LogTitle != value))
				{
					this.OnLogTitleChanging(value);
					this.SendPropertyChanging();
					this._LogTitle = value;
					this.SendPropertyChanged("LogTitle");
					this.OnLogTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogType", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string LogType
		{
			get
			{
				return this._LogType;
			}
			set
			{
				if ((this._LogType != value))
				{
					this.OnLogTypeChanging(value);
					this.SendPropertyChanging();
					this._LogType = value;
					this.SendPropertyChanged("LogType");
					this.OnLogTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddedTime", DbType="DateTime NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public System.DateTime AddedTime
		{
			get
			{
				return this._AddedTime;
			}
			set
			{
				if ((this._AddedTime != value))
				{
					this.OnAddedTimeChanging(value);
					this.SendPropertyChanging();
					this._AddedTime = value;
					this.SendPropertyChanged("AddedTime");
					this.OnAddedTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogContent", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public string LogContent
		{
			get
			{
				return this._LogContent;
			}
			set
			{
				if ((this._LogContent != value))
				{
					this.OnLogContentChanging(value);
					this.SendPropertyChanging();
					this._LogContent = value;
					this.SendPropertyChanged("LogContent");
					this.OnLogContentChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MajorInfo")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class MajorInfo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MajorID;
		
		private string _MajorName;
		
		private int _DepartmentID;
		
		private string _Description;
		
		private EntitySet<ClassInfo> _ClassInfo;
		
		private EntitySet<StudentInfo> _StudentInfo;
		
		private EntitySet<SubjectInfo> _SubjectInfo;
		
		private EntitySet<TeacherInfo> _TeacherInfo;
		
		private EntityRef<DepartmentInfo> _DepartmentInfo;
		
		private bool serializing;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMajorIDChanging(int value);
    partial void OnMajorIDChanged();
    partial void OnMajorNameChanging(string value);
    partial void OnMajorNameChanged();
    partial void OnDepartmentIDChanging(int value);
    partial void OnDepartmentIDChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public MajorInfo()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MajorID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int MajorID
		{
			get
			{
				return this._MajorID;
			}
			set
			{
				if ((this._MajorID != value))
				{
					this.OnMajorIDChanging(value);
					this.SendPropertyChanging();
					this._MajorID = value;
					this.SendPropertyChanged("MajorID");
					this.OnMajorIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MajorName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string MajorName
		{
			get
			{
				return this._MajorName;
			}
			set
			{
				if ((this._MajorName != value))
				{
					this.OnMajorNameChanging(value);
					this.SendPropertyChanging();
					this._MajorName = value;
					this.SendPropertyChanged("MajorName");
					this.OnMajorNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartmentID", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public int DepartmentID
		{
			get
			{
				return this._DepartmentID;
			}
			set
			{
				if ((this._DepartmentID != value))
				{
					if (this._DepartmentInfo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDepartmentIDChanging(value);
					this.SendPropertyChanging();
					this._DepartmentID = value;
					this.SendPropertyChanged("DepartmentID");
					this.OnDepartmentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MajorInfo_ClassInfo", Storage="_ClassInfo", ThisKey="MajorID", OtherKey="MajorID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5, EmitDefaultValue=false)]
		public EntitySet<ClassInfo> ClassInfo
		{
			get
			{
				if ((this.serializing 
							&& (this._ClassInfo.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._ClassInfo;
			}
			set
			{
				this._ClassInfo.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MajorInfo_StudentInfo", Storage="_StudentInfo", ThisKey="MajorID", OtherKey="MajorID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6, EmitDefaultValue=false)]
		public EntitySet<StudentInfo> StudentInfo
		{
			get
			{
				if ((this.serializing 
							&& (this._StudentInfo.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._StudentInfo;
			}
			set
			{
				this._StudentInfo.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MajorInfo_SubjectInfo", Storage="_SubjectInfo", ThisKey="MajorID", OtherKey="MajorID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7, EmitDefaultValue=false)]
		public EntitySet<SubjectInfo> SubjectInfo
		{
			get
			{
				if ((this.serializing 
							&& (this._SubjectInfo.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._SubjectInfo;
			}
			set
			{
				this._SubjectInfo.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MajorInfo_TeacherInfo", Storage="_TeacherInfo", ThisKey="MajorID", OtherKey="MajorID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8, EmitDefaultValue=false)]
		public EntitySet<TeacherInfo> TeacherInfo
		{
			get
			{
				if ((this.serializing 
							&& (this._TeacherInfo.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._TeacherInfo;
			}
			set
			{
				this._TeacherInfo.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DepartmentInfo_MajorInfo", Storage="_DepartmentInfo", ThisKey="DepartmentID", OtherKey="DepartmentID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public DepartmentInfo DepartmentInfo
		{
			get
			{
				return this._DepartmentInfo.Entity;
			}
			set
			{
				DepartmentInfo previousValue = this._DepartmentInfo.Entity;
				if (((previousValue != value) 
							|| (this._DepartmentInfo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DepartmentInfo.Entity = null;
						previousValue.MajorInfo.Remove(this);
					}
					this._DepartmentInfo.Entity = value;
					if ((value != null))
					{
						value.MajorInfo.Add(this);
						this._DepartmentID = value.DepartmentID;
					}
					else
					{
						this._DepartmentID = default(int);
					}
					this.SendPropertyChanged("DepartmentInfo");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ClassInfo(ClassInfo entity)
		{
			this.SendPropertyChanging();
			entity.MajorInfo = this;
		}
		
		private void detach_ClassInfo(ClassInfo entity)
		{
			this.SendPropertyChanging();
			entity.MajorInfo = null;
		}
		
		private void attach_StudentInfo(StudentInfo entity)
		{
			this.SendPropertyChanging();
			entity.MajorInfo = this;
		}
		
		private void detach_StudentInfo(StudentInfo entity)
		{
			this.SendPropertyChanging();
			entity.MajorInfo = null;
		}
		
		private void attach_SubjectInfo(SubjectInfo entity)
		{
			this.SendPropertyChanging();
			entity.MajorInfo = this;
		}
		
		private void detach_SubjectInfo(SubjectInfo entity)
		{
			this.SendPropertyChanging();
			entity.MajorInfo = null;
		}
		
		private void attach_TeacherInfo(TeacherInfo entity)
		{
			this.SendPropertyChanging();
			entity.MajorInfo = this;
		}
		
		private void detach_TeacherInfo(TeacherInfo entity)
		{
			this.SendPropertyChanging();
			entity.MajorInfo = null;
		}
		
		private void Initialize()
		{
			this._ClassInfo = new EntitySet<ClassInfo>(new Action<ClassInfo>(this.attach_ClassInfo), new Action<ClassInfo>(this.detach_ClassInfo));
			this._StudentInfo = new EntitySet<StudentInfo>(new Action<StudentInfo>(this.attach_StudentInfo), new Action<StudentInfo>(this.detach_StudentInfo));
			this._SubjectInfo = new EntitySet<SubjectInfo>(new Action<SubjectInfo>(this.attach_SubjectInfo), new Action<SubjectInfo>(this.detach_SubjectInfo));
			this._TeacherInfo = new EntitySet<TeacherInfo>(new Action<TeacherInfo>(this.attach_TeacherInfo), new Action<TeacherInfo>(this.detach_TeacherInfo));
			this._DepartmentInfo = default(EntityRef<DepartmentInfo>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MessageInfo")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class MessageInfo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MessageID;
		
		private string _Title;
		
		private string _Body;
		
		private bool _HasBeenReadByAuthor;
		
		private bool _HasBeenReadByReceiver;
		
		private System.DateTime _AddedTime;
		
		private System.Nullable<System.DateTime> _LastUpdatedTime;
		
		private bool _IsArchived;
		
		private int _AuthorID;
		
		private int _ReceiverID;
		
		private bool _AuthorIsStudent;
		
		private bool _ReceiverIsStudent;
		
		private bool _HasAttachment;
		
		private string _AttachmentPath;
		
		private int _DepartmentID;
		
		private string _Grade;
		
		private EntityRef<DepartmentInfo> _DepartmentInfo;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMessageIDChanging(int value);
    partial void OnMessageIDChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnBodyChanging(string value);
    partial void OnBodyChanged();
    partial void OnHasBeenReadByAuthorChanging(bool value);
    partial void OnHasBeenReadByAuthorChanged();
    partial void OnHasBeenReadByReceiverChanging(bool value);
    partial void OnHasBeenReadByReceiverChanged();
    partial void OnAddedTimeChanging(System.DateTime value);
    partial void OnAddedTimeChanged();
    partial void OnLastUpdatedTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnLastUpdatedTimeChanged();
    partial void OnIsArchivedChanging(bool value);
    partial void OnIsArchivedChanged();
    partial void OnAuthorIDChanging(int value);
    partial void OnAuthorIDChanged();
    partial void OnReceiverIDChanging(int value);
    partial void OnReceiverIDChanged();
    partial void OnAuthorIsStudentChanging(bool value);
    partial void OnAuthorIsStudentChanged();
    partial void OnReceiverIsStudentChanging(bool value);
    partial void OnReceiverIsStudentChanged();
    partial void OnHasAttachmentChanging(bool value);
    partial void OnHasAttachmentChanged();
    partial void OnAttachmentPathChanging(string value);
    partial void OnAttachmentPathChanged();
    partial void OnDepartmentIDChanging(int value);
    partial void OnDepartmentIDChanged();
    partial void OnGradeChanging(string value);
    partial void OnGradeChanged();
    #endregion
		
		public MessageInfo()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MessageID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int MessageID
		{
			get
			{
				return this._MessageID;
			}
			set
			{
				if ((this._MessageID != value))
				{
					this.OnMessageIDChanging(value);
					this.SendPropertyChanging();
					this._MessageID = value;
					this.SendPropertyChanged("MessageID");
					this.OnMessageIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Body", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string Body
		{
			get
			{
				return this._Body;
			}
			set
			{
				if ((this._Body != value))
				{
					this.OnBodyChanging(value);
					this.SendPropertyChanging();
					this._Body = value;
					this.SendPropertyChanged("Body");
					this.OnBodyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HasBeenReadByAuthor", DbType="Bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public bool HasBeenReadByAuthor
		{
			get
			{
				return this._HasBeenReadByAuthor;
			}
			set
			{
				if ((this._HasBeenReadByAuthor != value))
				{
					this.OnHasBeenReadByAuthorChanging(value);
					this.SendPropertyChanging();
					this._HasBeenReadByAuthor = value;
					this.SendPropertyChanged("HasBeenReadByAuthor");
					this.OnHasBeenReadByAuthorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HasBeenReadByReceiver", DbType="Bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public bool HasBeenReadByReceiver
		{
			get
			{
				return this._HasBeenReadByReceiver;
			}
			set
			{
				if ((this._HasBeenReadByReceiver != value))
				{
					this.OnHasBeenReadByReceiverChanging(value);
					this.SendPropertyChanging();
					this._HasBeenReadByReceiver = value;
					this.SendPropertyChanged("HasBeenReadByReceiver");
					this.OnHasBeenReadByReceiverChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddedTime", DbType="DateTime NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public System.DateTime AddedTime
		{
			get
			{
				return this._AddedTime;
			}
			set
			{
				if ((this._AddedTime != value))
				{
					this.OnAddedTimeChanging(value);
					this.SendPropertyChanging();
					this._AddedTime = value;
					this.SendPropertyChanged("AddedTime");
					this.OnAddedTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdatedTime", DbType="DateTime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public System.Nullable<System.DateTime> LastUpdatedTime
		{
			get
			{
				return this._LastUpdatedTime;
			}
			set
			{
				if ((this._LastUpdatedTime != value))
				{
					this.OnLastUpdatedTimeChanging(value);
					this.SendPropertyChanging();
					this._LastUpdatedTime = value;
					this.SendPropertyChanged("LastUpdatedTime");
					this.OnLastUpdatedTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsArchived", DbType="Bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public bool IsArchived
		{
			get
			{
				return this._IsArchived;
			}
			set
			{
				if ((this._IsArchived != value))
				{
					this.OnIsArchivedChanging(value);
					this.SendPropertyChanging();
					this._IsArchived = value;
					this.SendPropertyChanged("IsArchived");
					this.OnIsArchivedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuthorID", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public int AuthorID
		{
			get
			{
				return this._AuthorID;
			}
			set
			{
				if ((this._AuthorID != value))
				{
					this.OnAuthorIDChanging(value);
					this.SendPropertyChanging();
					this._AuthorID = value;
					this.SendPropertyChanged("AuthorID");
					this.OnAuthorIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReceiverID", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10)]
		public int ReceiverID
		{
			get
			{
				return this._ReceiverID;
			}
			set
			{
				if ((this._ReceiverID != value))
				{
					this.OnReceiverIDChanging(value);
					this.SendPropertyChanging();
					this._ReceiverID = value;
					this.SendPropertyChanged("ReceiverID");
					this.OnReceiverIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuthorIsStudent", DbType="Bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=11)]
		public bool AuthorIsStudent
		{
			get
			{
				return this._AuthorIsStudent;
			}
			set
			{
				if ((this._AuthorIsStudent != value))
				{
					this.OnAuthorIsStudentChanging(value);
					this.SendPropertyChanging();
					this._AuthorIsStudent = value;
					this.SendPropertyChanged("AuthorIsStudent");
					this.OnAuthorIsStudentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReceiverIsStudent", DbType="Bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=12)]
		public bool ReceiverIsStudent
		{
			get
			{
				return this._ReceiverIsStudent;
			}
			set
			{
				if ((this._ReceiverIsStudent != value))
				{
					this.OnReceiverIsStudentChanging(value);
					this.SendPropertyChanging();
					this._ReceiverIsStudent = value;
					this.SendPropertyChanged("ReceiverIsStudent");
					this.OnReceiverIsStudentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HasAttachment", DbType="Bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=13)]
		public bool HasAttachment
		{
			get
			{
				return this._HasAttachment;
			}
			set
			{
				if ((this._HasAttachment != value))
				{
					this.OnHasAttachmentChanging(value);
					this.SendPropertyChanging();
					this._HasAttachment = value;
					this.SendPropertyChanged("HasAttachment");
					this.OnHasAttachmentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttachmentPath", DbType="NVarChar(MAX)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=14)]
		public string AttachmentPath
		{
			get
			{
				return this._AttachmentPath;
			}
			set
			{
				if ((this._AttachmentPath != value))
				{
					this.OnAttachmentPathChanging(value);
					this.SendPropertyChanging();
					this._AttachmentPath = value;
					this.SendPropertyChanged("AttachmentPath");
					this.OnAttachmentPathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartmentID", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=15)]
		public int DepartmentID
		{
			get
			{
				return this._DepartmentID;
			}
			set
			{
				if ((this._DepartmentID != value))
				{
					if (this._DepartmentInfo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDepartmentIDChanging(value);
					this.SendPropertyChanging();
					this._DepartmentID = value;
					this.SendPropertyChanged("DepartmentID");
					this.OnDepartmentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Grade", DbType="VarChar(MAX)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=16)]
		public string Grade
		{
			get
			{
				return this._Grade;
			}
			set
			{
				if ((this._Grade != value))
				{
					this.OnGradeChanging(value);
					this.SendPropertyChanging();
					this._Grade = value;
					this.SendPropertyChanged("Grade");
					this.OnGradeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DepartmentInfo_MessageInfo", Storage="_DepartmentInfo", ThisKey="DepartmentID", OtherKey="DepartmentID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public DepartmentInfo DepartmentInfo
		{
			get
			{
				return this._DepartmentInfo.Entity;
			}
			set
			{
				DepartmentInfo previousValue = this._DepartmentInfo.Entity;
				if (((previousValue != value) 
							|| (this._DepartmentInfo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DepartmentInfo.Entity = null;
						previousValue.MessageInfo.Remove(this);
					}
					this._DepartmentInfo.Entity = value;
					if ((value != null))
					{
						value.MessageInfo.Add(this);
						this._DepartmentID = value.DepartmentID;
					}
					else
					{
						this._DepartmentID = default(int);
					}
					this.SendPropertyChanged("DepartmentInfo");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._DepartmentInfo = default(EntityRef<DepartmentInfo>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NoticeInfo")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class NoticeInfo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _NoticeID;
		
		private string _Title;
		
		private string _Body;
		
		private System.DateTime _AddedTime;
		
		private int _Type;
		
		private bool _HasAttachment;
		
		private string _AttachmentPath;
		
		private System.Nullable<int> _DepartmentID;
		
		private System.Nullable<int> _AuthorTeacherID;
		
		private int _ClassID;
		
		private System.Nullable<int> _CourseID;
		
		private EntityRef<DepartmentInfo> _DepartmentInfo;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNoticeIDChanging(int value);
    partial void OnNoticeIDChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnBodyChanging(string value);
    partial void OnBodyChanged();
    partial void OnAddedTimeChanging(System.DateTime value);
    partial void OnAddedTimeChanged();
    partial void OnTypeChanging(int value);
    partial void OnTypeChanged();
    partial void OnHasAttachmentChanging(bool value);
    partial void OnHasAttachmentChanged();
    partial void OnAttachmentPathChanging(string value);
    partial void OnAttachmentPathChanged();
    partial void OnDepartmentIDChanging(System.Nullable<int> value);
    partial void OnDepartmentIDChanged();
    partial void OnAuthorTeacherIDChanging(System.Nullable<int> value);
    partial void OnAuthorTeacherIDChanged();
    partial void OnClassIDChanging(int value);
    partial void OnClassIDChanged();
    partial void OnCourseIDChanging(System.Nullable<int> value);
    partial void OnCourseIDChanged();
    #endregion
		
		public NoticeInfo()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NoticeID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int NoticeID
		{
			get
			{
				return this._NoticeID;
			}
			set
			{
				if ((this._NoticeID != value))
				{
					this.OnNoticeIDChanging(value);
					this.SendPropertyChanging();
					this._NoticeID = value;
					this.SendPropertyChanged("NoticeID");
					this.OnNoticeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Body", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string Body
		{
			get
			{
				return this._Body;
			}
			set
			{
				if ((this._Body != value))
				{
					this.OnBodyChanging(value);
					this.SendPropertyChanging();
					this._Body = value;
					this.SendPropertyChanged("Body");
					this.OnBodyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddedTime", DbType="DateTime NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public System.DateTime AddedTime
		{
			get
			{
				return this._AddedTime;
			}
			set
			{
				if ((this._AddedTime != value))
				{
					this.OnAddedTimeChanging(value);
					this.SendPropertyChanging();
					this._AddedTime = value;
					this.SendPropertyChanged("AddedTime");
					this.OnAddedTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public int Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HasAttachment", DbType="Bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public bool HasAttachment
		{
			get
			{
				return this._HasAttachment;
			}
			set
			{
				if ((this._HasAttachment != value))
				{
					this.OnHasAttachmentChanging(value);
					this.SendPropertyChanging();
					this._HasAttachment = value;
					this.SendPropertyChanged("HasAttachment");
					this.OnHasAttachmentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttachmentPath", DbType="NVarChar(MAX)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public string AttachmentPath
		{
			get
			{
				return this._AttachmentPath;
			}
			set
			{
				if ((this._AttachmentPath != value))
				{
					this.OnAttachmentPathChanging(value);
					this.SendPropertyChanging();
					this._AttachmentPath = value;
					this.SendPropertyChanged("AttachmentPath");
					this.OnAttachmentPathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartmentID", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public System.Nullable<int> DepartmentID
		{
			get
			{
				return this._DepartmentID;
			}
			set
			{
				if ((this._DepartmentID != value))
				{
					if (this._DepartmentInfo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDepartmentIDChanging(value);
					this.SendPropertyChanging();
					this._DepartmentID = value;
					this.SendPropertyChanged("DepartmentID");
					this.OnDepartmentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuthorTeacherID", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public System.Nullable<int> AuthorTeacherID
		{
			get
			{
				return this._AuthorTeacherID;
			}
			set
			{
				if ((this._AuthorTeacherID != value))
				{
					this.OnAuthorTeacherIDChanging(value);
					this.SendPropertyChanging();
					this._AuthorTeacherID = value;
					this.SendPropertyChanged("AuthorTeacherID");
					this.OnAuthorTeacherIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassID", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10)]
		public int ClassID
		{
			get
			{
				return this._ClassID;
			}
			set
			{
				if ((this._ClassID != value))
				{
					this.OnClassIDChanging(value);
					this.SendPropertyChanging();
					this._ClassID = value;
					this.SendPropertyChanged("ClassID");
					this.OnClassIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CourseID", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=11)]
		public System.Nullable<int> CourseID
		{
			get
			{
				return this._CourseID;
			}
			set
			{
				if ((this._CourseID != value))
				{
					this.OnCourseIDChanging(value);
					this.SendPropertyChanging();
					this._CourseID = value;
					this.SendPropertyChanged("CourseID");
					this.OnCourseIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DepartmentInfo_NoticeInfo", Storage="_DepartmentInfo", ThisKey="DepartmentID", OtherKey="DepartmentID", IsForeignKey=true, DeleteRule="CASCADE")]
		public DepartmentInfo DepartmentInfo
		{
			get
			{
				return this._DepartmentInfo.Entity;
			}
			set
			{
				DepartmentInfo previousValue = this._DepartmentInfo.Entity;
				if (((previousValue != value) 
							|| (this._DepartmentInfo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DepartmentInfo.Entity = null;
						previousValue.NoticeInfo.Remove(this);
					}
					this._DepartmentInfo.Entity = value;
					if ((value != null))
					{
						value.NoticeInfo.Add(this);
						this._DepartmentID = value.DepartmentID;
					}
					else
					{
						this._DepartmentID = default(Nullable<int>);
					}
					this.SendPropertyChanged("DepartmentInfo");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._DepartmentInfo = default(EntityRef<DepartmentInfo>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.QuestionInfo")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class QuestionInfo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _QuestionID;
		
		private string _Title;
		
		private string _RefAnswer;
		
		private System.Nullable<bool> _IsSingleOrRightForJudge;
		
		private int _ChoiceOrBlankCount;
		
		private int _QuestionTypeID;
		
		private int _CourseID;
		
		private System.Nullable<int> _DifficultFactor;
		
		private System.Nullable<int> _DiscriminationFactor;
		
		private System.Nullable<int> _KPointID;
		
		private string _Keywords;
		
		private string _RunResult;
		
		private bool _HasImage;
		
		private string _ImgPath;
		
		private System.Nullable<int> _AuthorID;
		
		private System.Nullable<bool> _AuthorIsStudent;
		
		private string _AuthorName;
		
		private bool _IsFormal;
		
		private System.Nullable<bool> _IsDeleted;
		
		private System.Nullable<int> _UsedCount;
		
		private string _Chapter;
		
		private EntityRef<CourseInfo> _CourseInfo;
		
		private EntityRef<KnowledgePointInfo> _KnowledgePointInfo;
		
		private EntityRef<QuestionTypeInfo> _QuestionTypeInfo;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnQuestionIDChanging(int value);
    partial void OnQuestionIDChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnRefAnswerChanging(string value);
    partial void OnRefAnswerChanged();
    partial void OnIsSingleOrRightForJudgeChanging(System.Nullable<bool> value);
    partial void OnIsSingleOrRightForJudgeChanged();
    partial void OnChoiceOrBlankCountChanging(int value);
    partial void OnChoiceOrBlankCountChanged();
    partial void OnQuestionTypeIDChanging(int value);
    partial void OnQuestionTypeIDChanged();
    partial void OnCourseIDChanging(int value);
    partial void OnCourseIDChanged();
    partial void OnDifficultFactorChanging(System.Nullable<int> value);
    partial void OnDifficultFactorChanged();
    partial void OnDiscriminationFactorChanging(System.Nullable<int> value);
    partial void OnDiscriminationFactorChanged();
    partial void OnKPointIDChanging(System.Nullable<int> value);
    partial void OnKPointIDChanged();
    partial void OnKeywordsChanging(string value);
    partial void OnKeywordsChanged();
    partial void OnRunResultChanging(string value);
    partial void OnRunResultChanged();
    partial void OnHasImageChanging(bool value);
    partial void OnHasImageChanged();
    partial void OnImgPathChanging(string value);
    partial void OnImgPathChanged();
    partial void OnAuthorIDChanging(System.Nullable<int> value);
    partial void OnAuthorIDChanged();
    partial void OnAuthorIsStudentChanging(System.Nullable<bool> value);
    partial void OnAuthorIsStudentChanged();
    partial void OnAuthorNameChanging(string value);
    partial void OnAuthorNameChanged();
    partial void OnIsFormalChanging(bool value);
    partial void OnIsFormalChanged();
    partial void OnIsDeletedChanging(System.Nullable<bool> value);
    partial void OnIsDeletedChanged();
    partial void OnUsedCountChanging(System.Nullable<int> value);
    partial void OnUsedCountChanged();
    partial void OnChapterChanging(string value);
    partial void OnChapterChanged();
    #endregion
		
		public QuestionInfo()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuestionID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int QuestionID
		{
			get
			{
				return this._QuestionID;
			}
			set
			{
				if ((this._QuestionID != value))
				{
					this.OnQuestionIDChanging(value);
					this.SendPropertyChanging();
					this._QuestionID = value;
					this.SendPropertyChanged("QuestionID");
					this.OnQuestionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RefAnswer", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string RefAnswer
		{
			get
			{
				return this._RefAnswer;
			}
			set
			{
				if ((this._RefAnswer != value))
				{
					this.OnRefAnswerChanging(value);
					this.SendPropertyChanging();
					this._RefAnswer = value;
					this.SendPropertyChanged("RefAnswer");
					this.OnRefAnswerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsSingleOrRightForJudge", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public System.Nullable<bool> IsSingleOrRightForJudge
		{
			get
			{
				return this._IsSingleOrRightForJudge;
			}
			set
			{
				if ((this._IsSingleOrRightForJudge != value))
				{
					this.OnIsSingleOrRightForJudgeChanging(value);
					this.SendPropertyChanging();
					this._IsSingleOrRightForJudge = value;
					this.SendPropertyChanged("IsSingleOrRightForJudge");
					this.OnIsSingleOrRightForJudgeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChoiceOrBlankCount", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public int ChoiceOrBlankCount
		{
			get
			{
				return this._ChoiceOrBlankCount;
			}
			set
			{
				if ((this._ChoiceOrBlankCount != value))
				{
					this.OnChoiceOrBlankCountChanging(value);
					this.SendPropertyChanging();
					this._ChoiceOrBlankCount = value;
					this.SendPropertyChanged("ChoiceOrBlankCount");
					this.OnChoiceOrBlankCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuestionTypeID", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public int QuestionTypeID
		{
			get
			{
				return this._QuestionTypeID;
			}
			set
			{
				if ((this._QuestionTypeID != value))
				{
					if (this._QuestionTypeInfo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnQuestionTypeIDChanging(value);
					this.SendPropertyChanging();
					this._QuestionTypeID = value;
					this.SendPropertyChanged("QuestionTypeID");
					this.OnQuestionTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CourseID", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public int CourseID
		{
			get
			{
				return this._CourseID;
			}
			set
			{
				if ((this._CourseID != value))
				{
					if (this._CourseInfo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCourseIDChanging(value);
					this.SendPropertyChanging();
					this._CourseID = value;
					this.SendPropertyChanged("CourseID");
					this.OnCourseIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DifficultFactor", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public System.Nullable<int> DifficultFactor
		{
			get
			{
				return this._DifficultFactor;
			}
			set
			{
				if ((this._DifficultFactor != value))
				{
					this.OnDifficultFactorChanging(value);
					this.SendPropertyChanging();
					this._DifficultFactor = value;
					this.SendPropertyChanged("DifficultFactor");
					this.OnDifficultFactorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiscriminationFactor", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public System.Nullable<int> DiscriminationFactor
		{
			get
			{
				return this._DiscriminationFactor;
			}
			set
			{
				if ((this._DiscriminationFactor != value))
				{
					this.OnDiscriminationFactorChanging(value);
					this.SendPropertyChanging();
					this._DiscriminationFactor = value;
					this.SendPropertyChanged("DiscriminationFactor");
					this.OnDiscriminationFactorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KPointID", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10)]
		public System.Nullable<int> KPointID
		{
			get
			{
				return this._KPointID;
			}
			set
			{
				if ((this._KPointID != value))
				{
					if (this._KnowledgePointInfo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnKPointIDChanging(value);
					this.SendPropertyChanging();
					this._KPointID = value;
					this.SendPropertyChanged("KPointID");
					this.OnKPointIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Keywords", DbType="NVarChar(MAX)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=11)]
		public string Keywords
		{
			get
			{
				return this._Keywords;
			}
			set
			{
				if ((this._Keywords != value))
				{
					this.OnKeywordsChanging(value);
					this.SendPropertyChanging();
					this._Keywords = value;
					this.SendPropertyChanged("Keywords");
					this.OnKeywordsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RunResult", DbType="NVarChar(MAX)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=12)]
		public string RunResult
		{
			get
			{
				return this._RunResult;
			}
			set
			{
				if ((this._RunResult != value))
				{
					this.OnRunResultChanging(value);
					this.SendPropertyChanging();
					this._RunResult = value;
					this.SendPropertyChanged("RunResult");
					this.OnRunResultChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HasImage", DbType="Bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=13)]
		public bool HasImage
		{
			get
			{
				return this._HasImage;
			}
			set
			{
				if ((this._HasImage != value))
				{
					this.OnHasImageChanging(value);
					this.SendPropertyChanging();
					this._HasImage = value;
					this.SendPropertyChanged("HasImage");
					this.OnHasImageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImgPath", DbType="NVarChar(MAX)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=14)]
		public string ImgPath
		{
			get
			{
				return this._ImgPath;
			}
			set
			{
				if ((this._ImgPath != value))
				{
					this.OnImgPathChanging(value);
					this.SendPropertyChanging();
					this._ImgPath = value;
					this.SendPropertyChanged("ImgPath");
					this.OnImgPathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuthorID", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=15)]
		public System.Nullable<int> AuthorID
		{
			get
			{
				return this._AuthorID;
			}
			set
			{
				if ((this._AuthorID != value))
				{
					this.OnAuthorIDChanging(value);
					this.SendPropertyChanging();
					this._AuthorID = value;
					this.SendPropertyChanged("AuthorID");
					this.OnAuthorIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuthorIsStudent", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=16)]
		public System.Nullable<bool> AuthorIsStudent
		{
			get
			{
				return this._AuthorIsStudent;
			}
			set
			{
				if ((this._AuthorIsStudent != value))
				{
					this.OnAuthorIsStudentChanging(value);
					this.SendPropertyChanging();
					this._AuthorIsStudent = value;
					this.SendPropertyChanged("AuthorIsStudent");
					this.OnAuthorIsStudentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuthorName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=17)]
		public string AuthorName
		{
			get
			{
				return this._AuthorName;
			}
			set
			{
				if ((this._AuthorName != value))
				{
					this.OnAuthorNameChanging(value);
					this.SendPropertyChanging();
					this._AuthorName = value;
					this.SendPropertyChanged("AuthorName");
					this.OnAuthorNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsFormal", DbType="Bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=18)]
		public bool IsFormal
		{
			get
			{
				return this._IsFormal;
			}
			set
			{
				if ((this._IsFormal != value))
				{
					this.OnIsFormalChanging(value);
					this.SendPropertyChanging();
					this._IsFormal = value;
					this.SendPropertyChanged("IsFormal");
					this.OnIsFormalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDeleted", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=19)]
		public System.Nullable<bool> IsDeleted
		{
			get
			{
				return this._IsDeleted;
			}
			set
			{
				if ((this._IsDeleted != value))
				{
					this.OnIsDeletedChanging(value);
					this.SendPropertyChanging();
					this._IsDeleted = value;
					this.SendPropertyChanged("IsDeleted");
					this.OnIsDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UsedCount", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=20)]
		public System.Nullable<int> UsedCount
		{
			get
			{
				return this._UsedCount;
			}
			set
			{
				if ((this._UsedCount != value))
				{
					this.OnUsedCountChanging(value);
					this.SendPropertyChanging();
					this._UsedCount = value;
					this.SendPropertyChanged("UsedCount");
					this.OnUsedCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Chapter", DbType="NVarChar(50)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=21)]
		public string Chapter
		{
			get
			{
				return this._Chapter;
			}
			set
			{
				if ((this._Chapter != value))
				{
					this.OnChapterChanging(value);
					this.SendPropertyChanging();
					this._Chapter = value;
					this.SendPropertyChanged("Chapter");
					this.OnChapterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CourseInfo_QuestionInfo", Storage="_CourseInfo", ThisKey="CourseID", OtherKey="CourseID", IsForeignKey=true)]
		public CourseInfo CourseInfo
		{
			get
			{
				return this._CourseInfo.Entity;
			}
			set
			{
				CourseInfo previousValue = this._CourseInfo.Entity;
				if (((previousValue != value) 
							|| (this._CourseInfo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CourseInfo.Entity = null;
						previousValue.QuestionInfo.Remove(this);
					}
					this._CourseInfo.Entity = value;
					if ((value != null))
					{
						value.QuestionInfo.Add(this);
						this._CourseID = value.CourseID;
					}
					else
					{
						this._CourseID = default(int);
					}
					this.SendPropertyChanged("CourseInfo");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KnowledgePointInfo_QuestionInfo", Storage="_KnowledgePointInfo", ThisKey="KPointID", OtherKey="KnowledgePointID", IsForeignKey=true)]
		public KnowledgePointInfo KnowledgePointInfo
		{
			get
			{
				return this._KnowledgePointInfo.Entity;
			}
			set
			{
				KnowledgePointInfo previousValue = this._KnowledgePointInfo.Entity;
				if (((previousValue != value) 
							|| (this._KnowledgePointInfo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._KnowledgePointInfo.Entity = null;
						previousValue.QuestionInfo.Remove(this);
					}
					this._KnowledgePointInfo.Entity = value;
					if ((value != null))
					{
						value.QuestionInfo.Add(this);
						this._KPointID = value.KnowledgePointID;
					}
					else
					{
						this._KPointID = default(Nullable<int>);
					}
					this.SendPropertyChanged("KnowledgePointInfo");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="QuestionTypeInfo_QuestionInfo", Storage="_QuestionTypeInfo", ThisKey="QuestionTypeID", OtherKey="QuestionTypeID", IsForeignKey=true)]
		public QuestionTypeInfo QuestionTypeInfo
		{
			get
			{
				return this._QuestionTypeInfo.Entity;
			}
			set
			{
				QuestionTypeInfo previousValue = this._QuestionTypeInfo.Entity;
				if (((previousValue != value) 
							|| (this._QuestionTypeInfo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._QuestionTypeInfo.Entity = null;
						previousValue.QuestionInfo.Remove(this);
					}
					this._QuestionTypeInfo.Entity = value;
					if ((value != null))
					{
						value.QuestionInfo.Add(this);
						this._QuestionTypeID = value.QuestionTypeID;
					}
					else
					{
						this._QuestionTypeID = default(int);
					}
					this.SendPropertyChanged("QuestionTypeInfo");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._CourseInfo = default(EntityRef<CourseInfo>);
			this._KnowledgePointInfo = default(EntityRef<KnowledgePointInfo>);
			this._QuestionTypeInfo = default(EntityRef<QuestionTypeInfo>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.QuestionTypeInfo")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class QuestionTypeInfo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _QuestionTypeID;
		
		private string _TypeTitle;
		
		private string _TypeDesc;
		
		private System.Nullable<int> _RefMark;
		
		private EntitySet<QuestionInfo> _QuestionInfo;
		
		private bool serializing;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnQuestionTypeIDChanging(int value);
    partial void OnQuestionTypeIDChanged();
    partial void OnTypeTitleChanging(string value);
    partial void OnTypeTitleChanged();
    partial void OnTypeDescChanging(string value);
    partial void OnTypeDescChanged();
    partial void OnRefMarkChanging(System.Nullable<int> value);
    partial void OnRefMarkChanged();
    #endregion
		
		public QuestionTypeInfo()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuestionTypeID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int QuestionTypeID
		{
			get
			{
				return this._QuestionTypeID;
			}
			set
			{
				if ((this._QuestionTypeID != value))
				{
					this.OnQuestionTypeIDChanging(value);
					this.SendPropertyChanging();
					this._QuestionTypeID = value;
					this.SendPropertyChanged("QuestionTypeID");
					this.OnQuestionTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeTitle", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string TypeTitle
		{
			get
			{
				return this._TypeTitle;
			}
			set
			{
				if ((this._TypeTitle != value))
				{
					this.OnTypeTitleChanging(value);
					this.SendPropertyChanging();
					this._TypeTitle = value;
					this.SendPropertyChanged("TypeTitle");
					this.OnTypeTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeDesc", DbType="NVarChar(MAX)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string TypeDesc
		{
			get
			{
				return this._TypeDesc;
			}
			set
			{
				if ((this._TypeDesc != value))
				{
					this.OnTypeDescChanging(value);
					this.SendPropertyChanging();
					this._TypeDesc = value;
					this.SendPropertyChanged("TypeDesc");
					this.OnTypeDescChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RefMark", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public System.Nullable<int> RefMark
		{
			get
			{
				return this._RefMark;
			}
			set
			{
				if ((this._RefMark != value))
				{
					this.OnRefMarkChanging(value);
					this.SendPropertyChanging();
					this._RefMark = value;
					this.SendPropertyChanged("RefMark");
					this.OnRefMarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="QuestionTypeInfo_QuestionInfo", Storage="_QuestionInfo", ThisKey="QuestionTypeID", OtherKey="QuestionTypeID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5, EmitDefaultValue=false)]
		public EntitySet<QuestionInfo> QuestionInfo
		{
			get
			{
				if ((this.serializing 
							&& (this._QuestionInfo.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._QuestionInfo;
			}
			set
			{
				this._QuestionInfo.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_QuestionInfo(QuestionInfo entity)
		{
			this.SendPropertyChanging();
			entity.QuestionTypeInfo = this;
		}
		
		private void detach_QuestionInfo(QuestionInfo entity)
		{
			this.SendPropertyChanging();
			entity.QuestionTypeInfo = null;
		}
		
		private void Initialize()
		{
			this._QuestionInfo = new EntitySet<QuestionInfo>(new Action<QuestionInfo>(this.attach_QuestionInfo), new Action<QuestionInfo>(this.detach_QuestionInfo));
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RandomExamInfo")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class RandomExamInfo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RandomExamID;
		
		private int _StudentID;
		
		private string _StuNum;
		
		private int _ClassID;
		
		private int _BasicExamID;
		
		private string _SingleChoiceIDs;
		
		private string _MutilChoiceIDs;
		
		private string _JudgeIDs;
		
		private string _QuestionIDS;
		
		private System.Nullable<bool> _HasFinished;
		
		private System.Nullable<int> _TimeUse;
		
		private System.Nullable<System.DateTime> _StartTime;
		
		private System.Nullable<System.DateTime> _EndTime;
		
		private System.Nullable<int> _LoginTimes;
		
		private System.Nullable<bool> _InExaming;
		
		private string _ExamInfoFilePath;
		
		private int _SingleGetMark;
		
		private int _MutilGetMark;
		
		private int _JudgeGetMark;
		
		private int _TotalGetMark;
		
		private string _EachQuestionTypeGetMark;
		
		private int _CourseID;
		
		private bool _IsVisitor;
		
		private string _IPAddress;
		
		private EntityRef<BasicExamInfo> _BasicExamInfo;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRandomExamIDChanging(int value);
    partial void OnRandomExamIDChanged();
    partial void OnStudentIDChanging(int value);
    partial void OnStudentIDChanged();
    partial void OnStuNumChanging(string value);
    partial void OnStuNumChanged();
    partial void OnClassIDChanging(int value);
    partial void OnClassIDChanged();
    partial void OnBasicExamIDChanging(int value);
    partial void OnBasicExamIDChanged();
    partial void OnSingleChoiceIDsChanging(string value);
    partial void OnSingleChoiceIDsChanged();
    partial void OnMutilChoiceIDsChanging(string value);
    partial void OnMutilChoiceIDsChanged();
    partial void OnJudgeIDsChanging(string value);
    partial void OnJudgeIDsChanged();
    partial void OnQuestionIDSChanging(string value);
    partial void OnQuestionIDSChanged();
    partial void OnHasFinishedChanging(System.Nullable<bool> value);
    partial void OnHasFinishedChanged();
    partial void OnTimeUseChanging(System.Nullable<int> value);
    partial void OnTimeUseChanged();
    partial void OnStartTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnStartTimeChanged();
    partial void OnEndTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnEndTimeChanged();
    partial void OnLoginTimesChanging(System.Nullable<int> value);
    partial void OnLoginTimesChanged();
    partial void OnInExamingChanging(System.Nullable<bool> value);
    partial void OnInExamingChanged();
    partial void OnExamInfoFilePathChanging(string value);
    partial void OnExamInfoFilePathChanged();
    partial void OnSingleGetMarkChanging(int value);
    partial void OnSingleGetMarkChanged();
    partial void OnMutilGetMarkChanging(int value);
    partial void OnMutilGetMarkChanged();
    partial void OnJudgeGetMarkChanging(int value);
    partial void OnJudgeGetMarkChanged();
    partial void OnTotalGetMarkChanging(int value);
    partial void OnTotalGetMarkChanged();
    partial void OnEachQuestionTypeGetMarkChanging(string value);
    partial void OnEachQuestionTypeGetMarkChanged();
    partial void OnCourseIDChanging(int value);
    partial void OnCourseIDChanged();
    partial void OnIsVisitorChanging(bool value);
    partial void OnIsVisitorChanged();
    partial void OnIPAddressChanging(string value);
    partial void OnIPAddressChanged();
    #endregion
		
		public RandomExamInfo()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RandomExamID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int RandomExamID
		{
			get
			{
				return this._RandomExamID;
			}
			set
			{
				if ((this._RandomExamID != value))
				{
					this.OnRandomExamIDChanging(value);
					this.SendPropertyChanging();
					this._RandomExamID = value;
					this.SendPropertyChanged("RandomExamID");
					this.OnRandomExamIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentID", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int StudentID
		{
			get
			{
				return this._StudentID;
			}
			set
			{
				if ((this._StudentID != value))
				{
					this.OnStudentIDChanging(value);
					this.SendPropertyChanging();
					this._StudentID = value;
					this.SendPropertyChanged("StudentID");
					this.OnStudentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StuNum", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string StuNum
		{
			get
			{
				return this._StuNum;
			}
			set
			{
				if ((this._StuNum != value))
				{
					this.OnStuNumChanging(value);
					this.SendPropertyChanging();
					this._StuNum = value;
					this.SendPropertyChanged("StuNum");
					this.OnStuNumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassID", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public int ClassID
		{
			get
			{
				return this._ClassID;
			}
			set
			{
				if ((this._ClassID != value))
				{
					this.OnClassIDChanging(value);
					this.SendPropertyChanging();
					this._ClassID = value;
					this.SendPropertyChanged("ClassID");
					this.OnClassIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BasicExamID", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public int BasicExamID
		{
			get
			{
				return this._BasicExamID;
			}
			set
			{
				if ((this._BasicExamID != value))
				{
					if (this._BasicExamInfo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBasicExamIDChanging(value);
					this.SendPropertyChanging();
					this._BasicExamID = value;
					this.SendPropertyChanged("BasicExamID");
					this.OnBasicExamIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SingleChoiceIDs", DbType="NVarChar(MAX)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public string SingleChoiceIDs
		{
			get
			{
				return this._SingleChoiceIDs;
			}
			set
			{
				if ((this._SingleChoiceIDs != value))
				{
					this.OnSingleChoiceIDsChanging(value);
					this.SendPropertyChanging();
					this._SingleChoiceIDs = value;
					this.SendPropertyChanged("SingleChoiceIDs");
					this.OnSingleChoiceIDsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MutilChoiceIDs", DbType="NVarChar(MAX)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public string MutilChoiceIDs
		{
			get
			{
				return this._MutilChoiceIDs;
			}
			set
			{
				if ((this._MutilChoiceIDs != value))
				{
					this.OnMutilChoiceIDsChanging(value);
					this.SendPropertyChanging();
					this._MutilChoiceIDs = value;
					this.SendPropertyChanged("MutilChoiceIDs");
					this.OnMutilChoiceIDsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JudgeIDs", DbType="NVarChar(MAX)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public string JudgeIDs
		{
			get
			{
				return this._JudgeIDs;
			}
			set
			{
				if ((this._JudgeIDs != value))
				{
					this.OnJudgeIDsChanging(value);
					this.SendPropertyChanging();
					this._JudgeIDs = value;
					this.SendPropertyChanged("JudgeIDs");
					this.OnJudgeIDsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuestionIDS", DbType="NVarChar(MAX)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public string QuestionIDS
		{
			get
			{
				return this._QuestionIDS;
			}
			set
			{
				if ((this._QuestionIDS != value))
				{
					this.OnQuestionIDSChanging(value);
					this.SendPropertyChanging();
					this._QuestionIDS = value;
					this.SendPropertyChanged("QuestionIDS");
					this.OnQuestionIDSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HasFinished", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10)]
		public System.Nullable<bool> HasFinished
		{
			get
			{
				return this._HasFinished;
			}
			set
			{
				if ((this._HasFinished != value))
				{
					this.OnHasFinishedChanging(value);
					this.SendPropertyChanging();
					this._HasFinished = value;
					this.SendPropertyChanged("HasFinished");
					this.OnHasFinishedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeUse", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=11)]
		public System.Nullable<int> TimeUse
		{
			get
			{
				return this._TimeUse;
			}
			set
			{
				if ((this._TimeUse != value))
				{
					this.OnTimeUseChanging(value);
					this.SendPropertyChanging();
					this._TimeUse = value;
					this.SendPropertyChanged("TimeUse");
					this.OnTimeUseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartTime", DbType="DateTime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=12)]
		public System.Nullable<System.DateTime> StartTime
		{
			get
			{
				return this._StartTime;
			}
			set
			{
				if ((this._StartTime != value))
				{
					this.OnStartTimeChanging(value);
					this.SendPropertyChanging();
					this._StartTime = value;
					this.SendPropertyChanged("StartTime");
					this.OnStartTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndTime", DbType="DateTime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=13)]
		public System.Nullable<System.DateTime> EndTime
		{
			get
			{
				return this._EndTime;
			}
			set
			{
				if ((this._EndTime != value))
				{
					this.OnEndTimeChanging(value);
					this.SendPropertyChanging();
					this._EndTime = value;
					this.SendPropertyChanged("EndTime");
					this.OnEndTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoginTimes", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=14)]
		public System.Nullable<int> LoginTimes
		{
			get
			{
				return this._LoginTimes;
			}
			set
			{
				if ((this._LoginTimes != value))
				{
					this.OnLoginTimesChanging(value);
					this.SendPropertyChanging();
					this._LoginTimes = value;
					this.SendPropertyChanged("LoginTimes");
					this.OnLoginTimesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InExaming", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=15)]
		public System.Nullable<bool> InExaming
		{
			get
			{
				return this._InExaming;
			}
			set
			{
				if ((this._InExaming != value))
				{
					this.OnInExamingChanging(value);
					this.SendPropertyChanging();
					this._InExaming = value;
					this.SendPropertyChanged("InExaming");
					this.OnInExamingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExamInfoFilePath", DbType="NVarChar(MAX)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=16)]
		public string ExamInfoFilePath
		{
			get
			{
				return this._ExamInfoFilePath;
			}
			set
			{
				if ((this._ExamInfoFilePath != value))
				{
					this.OnExamInfoFilePathChanging(value);
					this.SendPropertyChanging();
					this._ExamInfoFilePath = value;
					this.SendPropertyChanged("ExamInfoFilePath");
					this.OnExamInfoFilePathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SingleGetMark", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=17)]
		public int SingleGetMark
		{
			get
			{
				return this._SingleGetMark;
			}
			set
			{
				if ((this._SingleGetMark != value))
				{
					this.OnSingleGetMarkChanging(value);
					this.SendPropertyChanging();
					this._SingleGetMark = value;
					this.SendPropertyChanged("SingleGetMark");
					this.OnSingleGetMarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MutilGetMark", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=18)]
		public int MutilGetMark
		{
			get
			{
				return this._MutilGetMark;
			}
			set
			{
				if ((this._MutilGetMark != value))
				{
					this.OnMutilGetMarkChanging(value);
					this.SendPropertyChanging();
					this._MutilGetMark = value;
					this.SendPropertyChanged("MutilGetMark");
					this.OnMutilGetMarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JudgeGetMark", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=19)]
		public int JudgeGetMark
		{
			get
			{
				return this._JudgeGetMark;
			}
			set
			{
				if ((this._JudgeGetMark != value))
				{
					this.OnJudgeGetMarkChanging(value);
					this.SendPropertyChanging();
					this._JudgeGetMark = value;
					this.SendPropertyChanged("JudgeGetMark");
					this.OnJudgeGetMarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalGetMark", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=20)]
		public int TotalGetMark
		{
			get
			{
				return this._TotalGetMark;
			}
			set
			{
				if ((this._TotalGetMark != value))
				{
					this.OnTotalGetMarkChanging(value);
					this.SendPropertyChanging();
					this._TotalGetMark = value;
					this.SendPropertyChanged("TotalGetMark");
					this.OnTotalGetMarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EachQuestionTypeGetMark", DbType="NVarChar(MAX)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=21)]
		public string EachQuestionTypeGetMark
		{
			get
			{
				return this._EachQuestionTypeGetMark;
			}
			set
			{
				if ((this._EachQuestionTypeGetMark != value))
				{
					this.OnEachQuestionTypeGetMarkChanging(value);
					this.SendPropertyChanging();
					this._EachQuestionTypeGetMark = value;
					this.SendPropertyChanged("EachQuestionTypeGetMark");
					this.OnEachQuestionTypeGetMarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CourseID", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=22)]
		public int CourseID
		{
			get
			{
				return this._CourseID;
			}
			set
			{
				if ((this._CourseID != value))
				{
					this.OnCourseIDChanging(value);
					this.SendPropertyChanging();
					this._CourseID = value;
					this.SendPropertyChanged("CourseID");
					this.OnCourseIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsVisitor", DbType="Bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=23)]
		public bool IsVisitor
		{
			get
			{
				return this._IsVisitor;
			}
			set
			{
				if ((this._IsVisitor != value))
				{
					this.OnIsVisitorChanging(value);
					this.SendPropertyChanging();
					this._IsVisitor = value;
					this.SendPropertyChanged("IsVisitor");
					this.OnIsVisitorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IPAddress", DbType="NVarChar(MAX)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=24)]
		public string IPAddress
		{
			get
			{
				return this._IPAddress;
			}
			set
			{
				if ((this._IPAddress != value))
				{
					this.OnIPAddressChanging(value);
					this.SendPropertyChanging();
					this._IPAddress = value;
					this.SendPropertyChanged("IPAddress");
					this.OnIPAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BasicExamInfo_RandomExamInfo", Storage="_BasicExamInfo", ThisKey="BasicExamID", OtherKey="BasicExamID", IsForeignKey=true)]
		public BasicExamInfo BasicExamInfo
		{
			get
			{
				return this._BasicExamInfo.Entity;
			}
			set
			{
				BasicExamInfo previousValue = this._BasicExamInfo.Entity;
				if (((previousValue != value) 
							|| (this._BasicExamInfo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BasicExamInfo.Entity = null;
						previousValue.RandomExamInfo.Remove(this);
					}
					this._BasicExamInfo.Entity = value;
					if ((value != null))
					{
						value.RandomExamInfo.Add(this);
						this._BasicExamID = value.BasicExamID;
					}
					else
					{
						this._BasicExamID = default(int);
					}
					this.SendPropertyChanged("BasicExamInfo");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._BasicExamInfo = default(EntityRef<BasicExamInfo>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RoleInfo")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class RoleInfo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RoleID;
		
		private string _RoleName;
		
		private string _RoleDesc;
		
		private EntitySet<AdminUserInfo> _AdminUserInfo;
		
		private bool serializing;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRoleIDChanging(int value);
    partial void OnRoleIDChanged();
    partial void OnRoleNameChanging(string value);
    partial void OnRoleNameChanged();
    partial void OnRoleDescChanging(string value);
    partial void OnRoleDescChanged();
    #endregion
		
		public RoleInfo()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int RoleID
		{
			get
			{
				return this._RoleID;
			}
			set
			{
				if ((this._RoleID != value))
				{
					this.OnRoleIDChanging(value);
					this.SendPropertyChanging();
					this._RoleID = value;
					this.SendPropertyChanged("RoleID");
					this.OnRoleIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string RoleName
		{
			get
			{
				return this._RoleName;
			}
			set
			{
				if ((this._RoleName != value))
				{
					this.OnRoleNameChanging(value);
					this.SendPropertyChanging();
					this._RoleName = value;
					this.SendPropertyChanged("RoleName");
					this.OnRoleNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleDesc", DbType="NVarChar(100)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string RoleDesc
		{
			get
			{
				return this._RoleDesc;
			}
			set
			{
				if ((this._RoleDesc != value))
				{
					this.OnRoleDescChanging(value);
					this.SendPropertyChanging();
					this._RoleDesc = value;
					this.SendPropertyChanged("RoleDesc");
					this.OnRoleDescChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RoleInfo_AdminUserInfo", Storage="_AdminUserInfo", ThisKey="RoleID", OtherKey="RoleID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4, EmitDefaultValue=false)]
		public EntitySet<AdminUserInfo> AdminUserInfo
		{
			get
			{
				if ((this.serializing 
							&& (this._AdminUserInfo.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._AdminUserInfo;
			}
			set
			{
				this._AdminUserInfo.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_AdminUserInfo(AdminUserInfo entity)
		{
			this.SendPropertyChanging();
			entity.RoleInfo = this;
		}
		
		private void detach_AdminUserInfo(AdminUserInfo entity)
		{
			this.SendPropertyChanging();
			entity.RoleInfo = null;
		}
		
		private void Initialize()
		{
			this._AdminUserInfo = new EntitySet<AdminUserInfo>(new Action<AdminUserInfo>(this.attach_AdminUserInfo), new Action<AdminUserInfo>(this.detach_AdminUserInfo));
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SelectChoiceInfo")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class SelectChoiceInfo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SelectChoiceID;
		
		private string _Title;
		
		private int _ChoiceCount;
		
		private bool _IsSingleSelect;
		
		private System.Nullable<int> _DifficultyLevel;
		
		private System.Nullable<int> _MajorID;
		
		private int _CourseID;
		
		private int _ChapterID;
		
		private EntitySet<ChoiceItemInfo> _ChoiceItemInfo;
		
		private EntityRef<ChapterInfo> _ChapterInfo;
		
		private EntityRef<CourseInfo> _CourseInfo;
		
		private bool serializing;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSelectChoiceIDChanging(int value);
    partial void OnSelectChoiceIDChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnChoiceCountChanging(int value);
    partial void OnChoiceCountChanged();
    partial void OnIsSingleSelectChanging(bool value);
    partial void OnIsSingleSelectChanged();
    partial void OnDifficultyLevelChanging(System.Nullable<int> value);
    partial void OnDifficultyLevelChanged();
    partial void OnMajorIDChanging(System.Nullable<int> value);
    partial void OnMajorIDChanged();
    partial void OnCourseIDChanging(int value);
    partial void OnCourseIDChanged();
    partial void OnChapterIDChanging(int value);
    partial void OnChapterIDChanged();
    #endregion
		
		public SelectChoiceInfo()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SelectChoiceID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int SelectChoiceID
		{
			get
			{
				return this._SelectChoiceID;
			}
			set
			{
				if ((this._SelectChoiceID != value))
				{
					this.OnSelectChoiceIDChanging(value);
					this.SendPropertyChanging();
					this._SelectChoiceID = value;
					this.SendPropertyChanged("SelectChoiceID");
					this.OnSelectChoiceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChoiceCount", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public int ChoiceCount
		{
			get
			{
				return this._ChoiceCount;
			}
			set
			{
				if ((this._ChoiceCount != value))
				{
					this.OnChoiceCountChanging(value);
					this.SendPropertyChanging();
					this._ChoiceCount = value;
					this.SendPropertyChanged("ChoiceCount");
					this.OnChoiceCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsSingleSelect", DbType="Bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public bool IsSingleSelect
		{
			get
			{
				return this._IsSingleSelect;
			}
			set
			{
				if ((this._IsSingleSelect != value))
				{
					this.OnIsSingleSelectChanging(value);
					this.SendPropertyChanging();
					this._IsSingleSelect = value;
					this.SendPropertyChanged("IsSingleSelect");
					this.OnIsSingleSelectChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DifficultyLevel", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public System.Nullable<int> DifficultyLevel
		{
			get
			{
				return this._DifficultyLevel;
			}
			set
			{
				if ((this._DifficultyLevel != value))
				{
					this.OnDifficultyLevelChanging(value);
					this.SendPropertyChanging();
					this._DifficultyLevel = value;
					this.SendPropertyChanged("DifficultyLevel");
					this.OnDifficultyLevelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MajorID", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public System.Nullable<int> MajorID
		{
			get
			{
				return this._MajorID;
			}
			set
			{
				if ((this._MajorID != value))
				{
					this.OnMajorIDChanging(value);
					this.SendPropertyChanging();
					this._MajorID = value;
					this.SendPropertyChanged("MajorID");
					this.OnMajorIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CourseID", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public int CourseID
		{
			get
			{
				return this._CourseID;
			}
			set
			{
				if ((this._CourseID != value))
				{
					if (this._CourseInfo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCourseIDChanging(value);
					this.SendPropertyChanging();
					this._CourseID = value;
					this.SendPropertyChanged("CourseID");
					this.OnCourseIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChapterID", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public int ChapterID
		{
			get
			{
				return this._ChapterID;
			}
			set
			{
				if ((this._ChapterID != value))
				{
					if (this._ChapterInfo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnChapterIDChanging(value);
					this.SendPropertyChanging();
					this._ChapterID = value;
					this.SendPropertyChanged("ChapterID");
					this.OnChapterIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SelectChoiceInfo_ChoiceItemInfo", Storage="_ChoiceItemInfo", ThisKey="SelectChoiceID", OtherKey="SelectChoiceID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9, EmitDefaultValue=false)]
		public EntitySet<ChoiceItemInfo> ChoiceItemInfo
		{
			get
			{
				if ((this.serializing 
							&& (this._ChoiceItemInfo.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._ChoiceItemInfo;
			}
			set
			{
				this._ChoiceItemInfo.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ChapterInfo_SelectChoiceInfo", Storage="_ChapterInfo", ThisKey="ChapterID", OtherKey="ChapterID", IsForeignKey=true)]
		public ChapterInfo ChapterInfo
		{
			get
			{
				return this._ChapterInfo.Entity;
			}
			set
			{
				ChapterInfo previousValue = this._ChapterInfo.Entity;
				if (((previousValue != value) 
							|| (this._ChapterInfo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ChapterInfo.Entity = null;
						previousValue.SelectChoiceInfo.Remove(this);
					}
					this._ChapterInfo.Entity = value;
					if ((value != null))
					{
						value.SelectChoiceInfo.Add(this);
						this._ChapterID = value.ChapterID;
					}
					else
					{
						this._ChapterID = default(int);
					}
					this.SendPropertyChanged("ChapterInfo");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CourseInfo_SelectChoiceInfo", Storage="_CourseInfo", ThisKey="CourseID", OtherKey="CourseID", IsForeignKey=true)]
		public CourseInfo CourseInfo
		{
			get
			{
				return this._CourseInfo.Entity;
			}
			set
			{
				CourseInfo previousValue = this._CourseInfo.Entity;
				if (((previousValue != value) 
							|| (this._CourseInfo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CourseInfo.Entity = null;
						previousValue.SelectChoiceInfo.Remove(this);
					}
					this._CourseInfo.Entity = value;
					if ((value != null))
					{
						value.SelectChoiceInfo.Add(this);
						this._CourseID = value.CourseID;
					}
					else
					{
						this._CourseID = default(int);
					}
					this.SendPropertyChanged("CourseInfo");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ChoiceItemInfo(ChoiceItemInfo entity)
		{
			this.SendPropertyChanging();
			entity.SelectChoiceInfo = this;
		}
		
		private void detach_ChoiceItemInfo(ChoiceItemInfo entity)
		{
			this.SendPropertyChanging();
			entity.SelectChoiceInfo = null;
		}
		
		private void Initialize()
		{
			this._ChoiceItemInfo = new EntitySet<ChoiceItemInfo>(new Action<ChoiceItemInfo>(this.attach_ChoiceItemInfo), new Action<ChoiceItemInfo>(this.detach_ChoiceItemInfo));
			this._ChapterInfo = default(EntityRef<ChapterInfo>);
			this._CourseInfo = default(EntityRef<CourseInfo>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.StudentInfo")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class StudentInfo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _StudentID;
		
		private string _StuName;
		
		private bool _Sex;
		
		private string _StuNum;
		
		private int _DepartmentID;
		
		private int _MajorID;
		
		private string _Grade;
		
		private string _Class;
		
		private System.Nullable<int> _ClassID;
		
		private string _HomeAddress;
		
		private string _LoginName;
		
		private string _Password;
		
		private string _CellPhone;
		
		private string _QQNum;
		
		private string _Email;
		
		private string _HomePhoneNum;
		
		private string _PersonalDesc;
		
		private string _ImagePath;
		
		private int _State;
		
		private System.Nullable<int> _TeacherID;
		
		private System.Nullable<int> _PractiseTeacherID;
		
		private System.Nullable<int> _CompanyTeacherID;
		
		private bool _HasSelectedThesis;
		
		private bool _IsFullProfile;
		
		private string _OtherTeacher;
		
		private string _OtherCompanyTeacher;
		
		private bool _FreeToUploadForThesis;
		
		private bool _FreeToUploadForPractise;
		
		private string _StuType;
		
		private System.Nullable<decimal> _IdentityCardNo;
		
		private string _MajorDirection;
		
		private System.Nullable<char> _LengthOfSchool;
		
		private string _Race;
		
		private System.Nullable<System.DateTime> _Birthday;
		
		private int _LoginCount;
		
		private EntityRef<DepartmentInfo> _DepartmentInfo;
		
		private EntityRef<MajorInfo> _MajorInfo;
		
		private EntityRef<TeacherInfo> _TeacherInfo;
		
		private EntityRef<TeacherInfo> _TeacherInfo1;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnStudentIDChanging(int value);
    partial void OnStudentIDChanged();
    partial void OnStuNameChanging(string value);
    partial void OnStuNameChanged();
    partial void OnSexChanging(bool value);
    partial void OnSexChanged();
    partial void OnStuNumChanging(string value);
    partial void OnStuNumChanged();
    partial void OnDepartmentIDChanging(int value);
    partial void OnDepartmentIDChanged();
    partial void OnMajorIDChanging(int value);
    partial void OnMajorIDChanged();
    partial void OnGradeChanging(string value);
    partial void OnGradeChanged();
    partial void OnClassChanging(string value);
    partial void OnClassChanged();
    partial void OnClassIDChanging(System.Nullable<int> value);
    partial void OnClassIDChanged();
    partial void OnHomeAddressChanging(string value);
    partial void OnHomeAddressChanged();
    partial void OnLoginNameChanging(string value);
    partial void OnLoginNameChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnCellPhoneChanging(string value);
    partial void OnCellPhoneChanged();
    partial void OnQQNumChanging(string value);
    partial void OnQQNumChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnHomePhoneNumChanging(string value);
    partial void OnHomePhoneNumChanged();
    partial void OnPersonalDescChanging(string value);
    partial void OnPersonalDescChanged();
    partial void OnImagePathChanging(string value);
    partial void OnImagePathChanged();
    partial void OnStateChanging(int value);
    partial void OnStateChanged();
    partial void OnTeacherIDChanging(System.Nullable<int> value);
    partial void OnTeacherIDChanged();
    partial void OnPractiseTeacherIDChanging(System.Nullable<int> value);
    partial void OnPractiseTeacherIDChanged();
    partial void OnCompanyTeacherIDChanging(System.Nullable<int> value);
    partial void OnCompanyTeacherIDChanged();
    partial void OnHasSelectedThesisChanging(bool value);
    partial void OnHasSelectedThesisChanged();
    partial void OnIsFullProfileChanging(bool value);
    partial void OnIsFullProfileChanged();
    partial void OnOtherTeacherChanging(string value);
    partial void OnOtherTeacherChanged();
    partial void OnOtherCompanyTeacherChanging(string value);
    partial void OnOtherCompanyTeacherChanged();
    partial void OnFreeToUploadForThesisChanging(bool value);
    partial void OnFreeToUploadForThesisChanged();
    partial void OnFreeToUploadForPractiseChanging(bool value);
    partial void OnFreeToUploadForPractiseChanged();
    partial void OnStuTypeChanging(string value);
    partial void OnStuTypeChanged();
    partial void OnIdentityCardNoChanging(System.Nullable<decimal> value);
    partial void OnIdentityCardNoChanged();
    partial void OnMajorDirectionChanging(string value);
    partial void OnMajorDirectionChanged();
    partial void OnLengthOfSchoolChanging(System.Nullable<char> value);
    partial void OnLengthOfSchoolChanged();
    partial void OnRaceChanging(string value);
    partial void OnRaceChanged();
    partial void OnBirthdayChanging(System.Nullable<System.DateTime> value);
    partial void OnBirthdayChanged();
    partial void OnLoginCountChanging(int value);
    partial void OnLoginCountChanged();
    #endregion
		
		public StudentInfo()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int StudentID
		{
			get
			{
				return this._StudentID;
			}
			set
			{
				if ((this._StudentID != value))
				{
					this.OnStudentIDChanging(value);
					this.SendPropertyChanging();
					this._StudentID = value;
					this.SendPropertyChanged("StudentID");
					this.OnStudentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StuName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string StuName
		{
			get
			{
				return this._StuName;
			}
			set
			{
				if ((this._StuName != value))
				{
					this.OnStuNameChanging(value);
					this.SendPropertyChanging();
					this._StuName = value;
					this.SendPropertyChanged("StuName");
					this.OnStuNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sex", DbType="Bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public bool Sex
		{
			get
			{
				return this._Sex;
			}
			set
			{
				if ((this._Sex != value))
				{
					this.OnSexChanging(value);
					this.SendPropertyChanging();
					this._Sex = value;
					this.SendPropertyChanged("Sex");
					this.OnSexChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StuNum", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public string StuNum
		{
			get
			{
				return this._StuNum;
			}
			set
			{
				if ((this._StuNum != value))
				{
					this.OnStuNumChanging(value);
					this.SendPropertyChanging();
					this._StuNum = value;
					this.SendPropertyChanged("StuNum");
					this.OnStuNumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartmentID", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public int DepartmentID
		{
			get
			{
				return this._DepartmentID;
			}
			set
			{
				if ((this._DepartmentID != value))
				{
					if (this._DepartmentInfo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDepartmentIDChanging(value);
					this.SendPropertyChanging();
					this._DepartmentID = value;
					this.SendPropertyChanged("DepartmentID");
					this.OnDepartmentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MajorID", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public int MajorID
		{
			get
			{
				return this._MajorID;
			}
			set
			{
				if ((this._MajorID != value))
				{
					if (this._MajorInfo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMajorIDChanging(value);
					this.SendPropertyChanging();
					this._MajorID = value;
					this.SendPropertyChanged("MajorID");
					this.OnMajorIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Grade", DbType="NVarChar(20)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public string Grade
		{
			get
			{
				return this._Grade;
			}
			set
			{
				if ((this._Grade != value))
				{
					this.OnGradeChanging(value);
					this.SendPropertyChanging();
					this._Grade = value;
					this.SendPropertyChanged("Grade");
					this.OnGradeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Class", DbType="NVarChar(30)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public string Class
		{
			get
			{
				return this._Class;
			}
			set
			{
				if ((this._Class != value))
				{
					this.OnClassChanging(value);
					this.SendPropertyChanging();
					this._Class = value;
					this.SendPropertyChanged("Class");
					this.OnClassChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassID", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public System.Nullable<int> ClassID
		{
			get
			{
				return this._ClassID;
			}
			set
			{
				if ((this._ClassID != value))
				{
					this.OnClassIDChanging(value);
					this.SendPropertyChanging();
					this._ClassID = value;
					this.SendPropertyChanged("ClassID");
					this.OnClassIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HomeAddress", DbType="NVarChar(80)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10)]
		public string HomeAddress
		{
			get
			{
				return this._HomeAddress;
			}
			set
			{
				if ((this._HomeAddress != value))
				{
					this.OnHomeAddressChanging(value);
					this.SendPropertyChanging();
					this._HomeAddress = value;
					this.SendPropertyChanged("HomeAddress");
					this.OnHomeAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoginName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=11)]
		public string LoginName
		{
			get
			{
				return this._LoginName;
			}
			set
			{
				if ((this._LoginName != value))
				{
					this.OnLoginNameChanging(value);
					this.SendPropertyChanging();
					this._LoginName = value;
					this.SendPropertyChanged("LoginName");
					this.OnLoginNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=12)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CellPhone", DbType="NVarChar(50)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=13)]
		public string CellPhone
		{
			get
			{
				return this._CellPhone;
			}
			set
			{
				if ((this._CellPhone != value))
				{
					this.OnCellPhoneChanging(value);
					this.SendPropertyChanging();
					this._CellPhone = value;
					this.SendPropertyChanged("CellPhone");
					this.OnCellPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QQNum", DbType="NVarChar(13)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=14)]
		public string QQNum
		{
			get
			{
				return this._QQNum;
			}
			set
			{
				if ((this._QQNum != value))
				{
					this.OnQQNumChanging(value);
					this.SendPropertyChanging();
					this._QQNum = value;
					this.SendPropertyChanged("QQNum");
					this.OnQQNumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(50)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=15)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HomePhoneNum", DbType="NVarChar(50)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=16)]
		public string HomePhoneNum
		{
			get
			{
				return this._HomePhoneNum;
			}
			set
			{
				if ((this._HomePhoneNum != value))
				{
					this.OnHomePhoneNumChanging(value);
					this.SendPropertyChanging();
					this._HomePhoneNum = value;
					this.SendPropertyChanged("HomePhoneNum");
					this.OnHomePhoneNumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonalDesc", DbType="NVarChar(MAX)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=17)]
		public string PersonalDesc
		{
			get
			{
				return this._PersonalDesc;
			}
			set
			{
				if ((this._PersonalDesc != value))
				{
					this.OnPersonalDescChanging(value);
					this.SendPropertyChanging();
					this._PersonalDesc = value;
					this.SendPropertyChanged("PersonalDesc");
					this.OnPersonalDescChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImagePath", DbType="NVarChar(MAX)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=18)]
		public string ImagePath
		{
			get
			{
				return this._ImagePath;
			}
			set
			{
				if ((this._ImagePath != value))
				{
					this.OnImagePathChanging(value);
					this.SendPropertyChanging();
					this._ImagePath = value;
					this.SendPropertyChanged("ImagePath");
					this.OnImagePathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_State", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=19)]
		public int State
		{
			get
			{
				return this._State;
			}
			set
			{
				if ((this._State != value))
				{
					this.OnStateChanging(value);
					this.SendPropertyChanging();
					this._State = value;
					this.SendPropertyChanged("State");
					this.OnStateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TeacherID", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=20)]
		public System.Nullable<int> TeacherID
		{
			get
			{
				return this._TeacherID;
			}
			set
			{
				if ((this._TeacherID != value))
				{
					if (this._TeacherInfo1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTeacherIDChanging(value);
					this.SendPropertyChanging();
					this._TeacherID = value;
					this.SendPropertyChanged("TeacherID");
					this.OnTeacherIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PractiseTeacherID", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=21)]
		public System.Nullable<int> PractiseTeacherID
		{
			get
			{
				return this._PractiseTeacherID;
			}
			set
			{
				if ((this._PractiseTeacherID != value))
				{
					if (this._TeacherInfo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPractiseTeacherIDChanging(value);
					this.SendPropertyChanging();
					this._PractiseTeacherID = value;
					this.SendPropertyChanged("PractiseTeacherID");
					this.OnPractiseTeacherIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyTeacherID", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=22)]
		public System.Nullable<int> CompanyTeacherID
		{
			get
			{
				return this._CompanyTeacherID;
			}
			set
			{
				if ((this._CompanyTeacherID != value))
				{
					this.OnCompanyTeacherIDChanging(value);
					this.SendPropertyChanging();
					this._CompanyTeacherID = value;
					this.SendPropertyChanged("CompanyTeacherID");
					this.OnCompanyTeacherIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HasSelectedThesis", DbType="Bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=23)]
		public bool HasSelectedThesis
		{
			get
			{
				return this._HasSelectedThesis;
			}
			set
			{
				if ((this._HasSelectedThesis != value))
				{
					this.OnHasSelectedThesisChanging(value);
					this.SendPropertyChanging();
					this._HasSelectedThesis = value;
					this.SendPropertyChanged("HasSelectedThesis");
					this.OnHasSelectedThesisChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsFullProfile", DbType="Bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=24)]
		public bool IsFullProfile
		{
			get
			{
				return this._IsFullProfile;
			}
			set
			{
				if ((this._IsFullProfile != value))
				{
					this.OnIsFullProfileChanging(value);
					this.SendPropertyChanging();
					this._IsFullProfile = value;
					this.SendPropertyChanged("IsFullProfile");
					this.OnIsFullProfileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OtherTeacher", DbType="NVarChar(MAX)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=25)]
		public string OtherTeacher
		{
			get
			{
				return this._OtherTeacher;
			}
			set
			{
				if ((this._OtherTeacher != value))
				{
					this.OnOtherTeacherChanging(value);
					this.SendPropertyChanging();
					this._OtherTeacher = value;
					this.SendPropertyChanged("OtherTeacher");
					this.OnOtherTeacherChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OtherCompanyTeacher", DbType="NVarChar(MAX)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=26)]
		public string OtherCompanyTeacher
		{
			get
			{
				return this._OtherCompanyTeacher;
			}
			set
			{
				if ((this._OtherCompanyTeacher != value))
				{
					this.OnOtherCompanyTeacherChanging(value);
					this.SendPropertyChanging();
					this._OtherCompanyTeacher = value;
					this.SendPropertyChanged("OtherCompanyTeacher");
					this.OnOtherCompanyTeacherChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FreeToUploadForThesis", DbType="Bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=27)]
		public bool FreeToUploadForThesis
		{
			get
			{
				return this._FreeToUploadForThesis;
			}
			set
			{
				if ((this._FreeToUploadForThesis != value))
				{
					this.OnFreeToUploadForThesisChanging(value);
					this.SendPropertyChanging();
					this._FreeToUploadForThesis = value;
					this.SendPropertyChanged("FreeToUploadForThesis");
					this.OnFreeToUploadForThesisChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FreeToUploadForPractise", DbType="Bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=28)]
		public bool FreeToUploadForPractise
		{
			get
			{
				return this._FreeToUploadForPractise;
			}
			set
			{
				if ((this._FreeToUploadForPractise != value))
				{
					this.OnFreeToUploadForPractiseChanging(value);
					this.SendPropertyChanging();
					this._FreeToUploadForPractise = value;
					this.SendPropertyChanged("FreeToUploadForPractise");
					this.OnFreeToUploadForPractiseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StuType", DbType="NVarChar(50)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=29)]
		public string StuType
		{
			get
			{
				return this._StuType;
			}
			set
			{
				if ((this._StuType != value))
				{
					this.OnStuTypeChanging(value);
					this.SendPropertyChanging();
					this._StuType = value;
					this.SendPropertyChanged("StuType");
					this.OnStuTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdentityCardNo", DbType="Decimal(18,0)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=30)]
		public System.Nullable<decimal> IdentityCardNo
		{
			get
			{
				return this._IdentityCardNo;
			}
			set
			{
				if ((this._IdentityCardNo != value))
				{
					this.OnIdentityCardNoChanging(value);
					this.SendPropertyChanging();
					this._IdentityCardNo = value;
					this.SendPropertyChanged("IdentityCardNo");
					this.OnIdentityCardNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MajorDirection", DbType="NVarChar(100)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=31)]
		public string MajorDirection
		{
			get
			{
				return this._MajorDirection;
			}
			set
			{
				if ((this._MajorDirection != value))
				{
					this.OnMajorDirectionChanging(value);
					this.SendPropertyChanging();
					this._MajorDirection = value;
					this.SendPropertyChanged("MajorDirection");
					this.OnMajorDirectionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LengthOfSchool", DbType="NChar(1)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=32)]
		public System.Nullable<char> LengthOfSchool
		{
			get
			{
				return this._LengthOfSchool;
			}
			set
			{
				if ((this._LengthOfSchool != value))
				{
					this.OnLengthOfSchoolChanging(value);
					this.SendPropertyChanging();
					this._LengthOfSchool = value;
					this.SendPropertyChanged("LengthOfSchool");
					this.OnLengthOfSchoolChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Race", DbType="NVarChar(30)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=33)]
		public string Race
		{
			get
			{
				return this._Race;
			}
			set
			{
				if ((this._Race != value))
				{
					this.OnRaceChanging(value);
					this.SendPropertyChanging();
					this._Race = value;
					this.SendPropertyChanged("Race");
					this.OnRaceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Birthday", DbType="DateTime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=34)]
		public System.Nullable<System.DateTime> Birthday
		{
			get
			{
				return this._Birthday;
			}
			set
			{
				if ((this._Birthday != value))
				{
					this.OnBirthdayChanging(value);
					this.SendPropertyChanging();
					this._Birthday = value;
					this.SendPropertyChanged("Birthday");
					this.OnBirthdayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoginCount", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=35)]
		public int LoginCount
		{
			get
			{
				return this._LoginCount;
			}
			set
			{
				if ((this._LoginCount != value))
				{
					this.OnLoginCountChanging(value);
					this.SendPropertyChanging();
					this._LoginCount = value;
					this.SendPropertyChanged("LoginCount");
					this.OnLoginCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DepartmentInfo_StudentInfo", Storage="_DepartmentInfo", ThisKey="DepartmentID", OtherKey="DepartmentID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public DepartmentInfo DepartmentInfo
		{
			get
			{
				return this._DepartmentInfo.Entity;
			}
			set
			{
				DepartmentInfo previousValue = this._DepartmentInfo.Entity;
				if (((previousValue != value) 
							|| (this._DepartmentInfo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DepartmentInfo.Entity = null;
						previousValue.StudentInfo.Remove(this);
					}
					this._DepartmentInfo.Entity = value;
					if ((value != null))
					{
						value.StudentInfo.Add(this);
						this._DepartmentID = value.DepartmentID;
					}
					else
					{
						this._DepartmentID = default(int);
					}
					this.SendPropertyChanged("DepartmentInfo");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MajorInfo_StudentInfo", Storage="_MajorInfo", ThisKey="MajorID", OtherKey="MajorID", IsForeignKey=true)]
		public MajorInfo MajorInfo
		{
			get
			{
				return this._MajorInfo.Entity;
			}
			set
			{
				MajorInfo previousValue = this._MajorInfo.Entity;
				if (((previousValue != value) 
							|| (this._MajorInfo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MajorInfo.Entity = null;
						previousValue.StudentInfo.Remove(this);
					}
					this._MajorInfo.Entity = value;
					if ((value != null))
					{
						value.StudentInfo.Add(this);
						this._MajorID = value.MajorID;
					}
					else
					{
						this._MajorID = default(int);
					}
					this.SendPropertyChanged("MajorInfo");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TeacherInfo_StudentInfo", Storage="_TeacherInfo", ThisKey="PractiseTeacherID", OtherKey="TeacherID", IsForeignKey=true)]
		public TeacherInfo TeacherInfo
		{
			get
			{
				return this._TeacherInfo.Entity;
			}
			set
			{
				TeacherInfo previousValue = this._TeacherInfo.Entity;
				if (((previousValue != value) 
							|| (this._TeacherInfo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TeacherInfo.Entity = null;
						previousValue.StudentInfo.Remove(this);
					}
					this._TeacherInfo.Entity = value;
					if ((value != null))
					{
						value.StudentInfo.Add(this);
						this._PractiseTeacherID = value.TeacherID;
					}
					else
					{
						this._PractiseTeacherID = default(Nullable<int>);
					}
					this.SendPropertyChanged("TeacherInfo");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TeacherInfo_StudentInfo1", Storage="_TeacherInfo1", ThisKey="TeacherID", OtherKey="TeacherID", IsForeignKey=true)]
		public TeacherInfo TeacherInfo1
		{
			get
			{
				return this._TeacherInfo1.Entity;
			}
			set
			{
				TeacherInfo previousValue = this._TeacherInfo1.Entity;
				if (((previousValue != value) 
							|| (this._TeacherInfo1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TeacherInfo1.Entity = null;
						previousValue.StudentInfo1.Remove(this);
					}
					this._TeacherInfo1.Entity = value;
					if ((value != null))
					{
						value.StudentInfo1.Add(this);
						this._TeacherID = value.TeacherID;
					}
					else
					{
						this._TeacherID = default(Nullable<int>);
					}
					this.SendPropertyChanged("TeacherInfo1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._DepartmentInfo = default(EntityRef<DepartmentInfo>);
			this._MajorInfo = default(EntityRef<MajorInfo>);
			this._TeacherInfo = default(EntityRef<TeacherInfo>);
			this._TeacherInfo1 = default(EntityRef<TeacherInfo>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SubjectInfo")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class SubjectInfo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SubjectID;
		
		private string _Title;
		
		private string _Description;
		
		private string _AuthorName;
		
		private string _Reference;
		
		private int _MajorID;
		
		private int _DepartmentID;
		
		private bool _IsChecked;
		
		private bool _IsFormal;
		
		private int _AuthorID;
		
		private bool _AuthorIsStudent;
		
		private bool _IsFromWork;
		
		private bool _IsForemostInDept;
		
		private EntityRef<MajorInfo> _MajorInfo;
		
		private EntityRef<DepartmentInfo> _DepartmentInfo;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSubjectIDChanging(int value);
    partial void OnSubjectIDChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnAuthorNameChanging(string value);
    partial void OnAuthorNameChanged();
    partial void OnReferenceChanging(string value);
    partial void OnReferenceChanged();
    partial void OnMajorIDChanging(int value);
    partial void OnMajorIDChanged();
    partial void OnDepartmentIDChanging(int value);
    partial void OnDepartmentIDChanged();
    partial void OnIsCheckedChanging(bool value);
    partial void OnIsCheckedChanged();
    partial void OnIsFormalChanging(bool value);
    partial void OnIsFormalChanged();
    partial void OnAuthorIDChanging(int value);
    partial void OnAuthorIDChanged();
    partial void OnAuthorIsStudentChanging(bool value);
    partial void OnAuthorIsStudentChanged();
    partial void OnIsFromWorkChanging(bool value);
    partial void OnIsFromWorkChanged();
    partial void OnIsForemostInDeptChanging(bool value);
    partial void OnIsForemostInDeptChanged();
    #endregion
		
		public SubjectInfo()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubjectID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int SubjectID
		{
			get
			{
				return this._SubjectID;
			}
			set
			{
				if ((this._SubjectID != value))
				{
					this.OnSubjectIDChanging(value);
					this.SendPropertyChanging();
					this._SubjectID = value;
					this.SendPropertyChanged("SubjectID");
					this.OnSubjectIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(70) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuthorName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public string AuthorName
		{
			get
			{
				return this._AuthorName;
			}
			set
			{
				if ((this._AuthorName != value))
				{
					this.OnAuthorNameChanging(value);
					this.SendPropertyChanging();
					this._AuthorName = value;
					this.SendPropertyChanged("AuthorName");
					this.OnAuthorNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Reference", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public string Reference
		{
			get
			{
				return this._Reference;
			}
			set
			{
				if ((this._Reference != value))
				{
					this.OnReferenceChanging(value);
					this.SendPropertyChanging();
					this._Reference = value;
					this.SendPropertyChanged("Reference");
					this.OnReferenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MajorID", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public int MajorID
		{
			get
			{
				return this._MajorID;
			}
			set
			{
				if ((this._MajorID != value))
				{
					if (this._MajorInfo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMajorIDChanging(value);
					this.SendPropertyChanging();
					this._MajorID = value;
					this.SendPropertyChanged("MajorID");
					this.OnMajorIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartmentID", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public int DepartmentID
		{
			get
			{
				return this._DepartmentID;
			}
			set
			{
				if ((this._DepartmentID != value))
				{
					if (this._DepartmentInfo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDepartmentIDChanging(value);
					this.SendPropertyChanging();
					this._DepartmentID = value;
					this.SendPropertyChanged("DepartmentID");
					this.OnDepartmentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsChecked", DbType="Bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public bool IsChecked
		{
			get
			{
				return this._IsChecked;
			}
			set
			{
				if ((this._IsChecked != value))
				{
					this.OnIsCheckedChanging(value);
					this.SendPropertyChanging();
					this._IsChecked = value;
					this.SendPropertyChanged("IsChecked");
					this.OnIsCheckedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsFormal", DbType="Bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public bool IsFormal
		{
			get
			{
				return this._IsFormal;
			}
			set
			{
				if ((this._IsFormal != value))
				{
					this.OnIsFormalChanging(value);
					this.SendPropertyChanging();
					this._IsFormal = value;
					this.SendPropertyChanged("IsFormal");
					this.OnIsFormalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuthorID", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10)]
		public int AuthorID
		{
			get
			{
				return this._AuthorID;
			}
			set
			{
				if ((this._AuthorID != value))
				{
					this.OnAuthorIDChanging(value);
					this.SendPropertyChanging();
					this._AuthorID = value;
					this.SendPropertyChanged("AuthorID");
					this.OnAuthorIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuthorIsStudent", DbType="Bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=11)]
		public bool AuthorIsStudent
		{
			get
			{
				return this._AuthorIsStudent;
			}
			set
			{
				if ((this._AuthorIsStudent != value))
				{
					this.OnAuthorIsStudentChanging(value);
					this.SendPropertyChanging();
					this._AuthorIsStudent = value;
					this.SendPropertyChanged("AuthorIsStudent");
					this.OnAuthorIsStudentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsFromWork", DbType="Bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=12)]
		public bool IsFromWork
		{
			get
			{
				return this._IsFromWork;
			}
			set
			{
				if ((this._IsFromWork != value))
				{
					this.OnIsFromWorkChanging(value);
					this.SendPropertyChanging();
					this._IsFromWork = value;
					this.SendPropertyChanged("IsFromWork");
					this.OnIsFromWorkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsForemostInDept", DbType="Bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=13)]
		public bool IsForemostInDept
		{
			get
			{
				return this._IsForemostInDept;
			}
			set
			{
				if ((this._IsForemostInDept != value))
				{
					this.OnIsForemostInDeptChanging(value);
					this.SendPropertyChanging();
					this._IsForemostInDept = value;
					this.SendPropertyChanged("IsForemostInDept");
					this.OnIsForemostInDeptChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MajorInfo_SubjectInfo", Storage="_MajorInfo", ThisKey="MajorID", OtherKey="MajorID", IsForeignKey=true)]
		public MajorInfo MajorInfo
		{
			get
			{
				return this._MajorInfo.Entity;
			}
			set
			{
				MajorInfo previousValue = this._MajorInfo.Entity;
				if (((previousValue != value) 
							|| (this._MajorInfo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MajorInfo.Entity = null;
						previousValue.SubjectInfo.Remove(this);
					}
					this._MajorInfo.Entity = value;
					if ((value != null))
					{
						value.SubjectInfo.Add(this);
						this._MajorID = value.MajorID;
					}
					else
					{
						this._MajorID = default(int);
					}
					this.SendPropertyChanged("MajorInfo");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DepartmentInfo_SubjectInfo", Storage="_DepartmentInfo", ThisKey="DepartmentID", OtherKey="DepartmentID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public DepartmentInfo DepartmentInfo
		{
			get
			{
				return this._DepartmentInfo.Entity;
			}
			set
			{
				DepartmentInfo previousValue = this._DepartmentInfo.Entity;
				if (((previousValue != value) 
							|| (this._DepartmentInfo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DepartmentInfo.Entity = null;
						previousValue.SubjectInfo.Remove(this);
					}
					this._DepartmentInfo.Entity = value;
					if ((value != null))
					{
						value.SubjectInfo.Add(this);
						this._DepartmentID = value.DepartmentID;
					}
					else
					{
						this._DepartmentID = default(int);
					}
					this.SendPropertyChanged("DepartmentInfo");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._MajorInfo = default(EntityRef<MajorInfo>);
			this._DepartmentInfo = default(EntityRef<DepartmentInfo>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TeacherInfo")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class TeacherInfo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _TeacherID;
		
		private string _TeacherName;
		
		private string _TeacherNum;
		
		private bool _Sex;
		
		private int _MajorID;
		
		private int _DepartmentID;
		
		private string _ProfessionalTitle;
		
		private string _ResearchField;
		
		private string _LoginName;
		
		private string _Password;
		
		private string _QQNum;
		
		private string _Email;
		
		private string _CellPhoneNum;
		
		private string _OfficePhoneNum;
		
		private string _PersonalDesc;
		
		private string _ImaPath;
		
		private bool _IsMajorManager;
		
		private int _LoginCount;
		
		private System.Nullable<System.DateTime> _LastLoginTime;
		
		private EntitySet<StudentInfo> _StudentInfo;
		
		private EntitySet<StudentInfo> _StudentInfo1;
		
		private EntityRef<DepartmentInfo> _DepartmentInfo;
		
		private EntityRef<MajorInfo> _MajorInfo;
		
		private bool serializing;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTeacherIDChanging(int value);
    partial void OnTeacherIDChanged();
    partial void OnTeacherNameChanging(string value);
    partial void OnTeacherNameChanged();
    partial void OnTeacherNumChanging(string value);
    partial void OnTeacherNumChanged();
    partial void OnSexChanging(bool value);
    partial void OnSexChanged();
    partial void OnMajorIDChanging(int value);
    partial void OnMajorIDChanged();
    partial void OnDepartmentIDChanging(int value);
    partial void OnDepartmentIDChanged();
    partial void OnProfessionalTitleChanging(string value);
    partial void OnProfessionalTitleChanged();
    partial void OnResearchFieldChanging(string value);
    partial void OnResearchFieldChanged();
    partial void OnLoginNameChanging(string value);
    partial void OnLoginNameChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnQQNumChanging(string value);
    partial void OnQQNumChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnCellPhoneNumChanging(string value);
    partial void OnCellPhoneNumChanged();
    partial void OnOfficePhoneNumChanging(string value);
    partial void OnOfficePhoneNumChanged();
    partial void OnPersonalDescChanging(string value);
    partial void OnPersonalDescChanged();
    partial void OnImaPathChanging(string value);
    partial void OnImaPathChanged();
    partial void OnIsMajorManagerChanging(bool value);
    partial void OnIsMajorManagerChanged();
    partial void OnLoginCountChanging(int value);
    partial void OnLoginCountChanged();
    partial void OnLastLoginTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnLastLoginTimeChanged();
    #endregion
		
		public TeacherInfo()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TeacherID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int TeacherID
		{
			get
			{
				return this._TeacherID;
			}
			set
			{
				if ((this._TeacherID != value))
				{
					this.OnTeacherIDChanging(value);
					this.SendPropertyChanging();
					this._TeacherID = value;
					this.SendPropertyChanged("TeacherID");
					this.OnTeacherIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TeacherName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string TeacherName
		{
			get
			{
				return this._TeacherName;
			}
			set
			{
				if ((this._TeacherName != value))
				{
					this.OnTeacherNameChanging(value);
					this.SendPropertyChanging();
					this._TeacherName = value;
					this.SendPropertyChanged("TeacherName");
					this.OnTeacherNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TeacherNum", DbType="NVarChar(10)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string TeacherNum
		{
			get
			{
				return this._TeacherNum;
			}
			set
			{
				if ((this._TeacherNum != value))
				{
					this.OnTeacherNumChanging(value);
					this.SendPropertyChanging();
					this._TeacherNum = value;
					this.SendPropertyChanged("TeacherNum");
					this.OnTeacherNumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sex", DbType="Bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public bool Sex
		{
			get
			{
				return this._Sex;
			}
			set
			{
				if ((this._Sex != value))
				{
					this.OnSexChanging(value);
					this.SendPropertyChanging();
					this._Sex = value;
					this.SendPropertyChanged("Sex");
					this.OnSexChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MajorID", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public int MajorID
		{
			get
			{
				return this._MajorID;
			}
			set
			{
				if ((this._MajorID != value))
				{
					if (this._MajorInfo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMajorIDChanging(value);
					this.SendPropertyChanging();
					this._MajorID = value;
					this.SendPropertyChanged("MajorID");
					this.OnMajorIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartmentID", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public int DepartmentID
		{
			get
			{
				return this._DepartmentID;
			}
			set
			{
				if ((this._DepartmentID != value))
				{
					if (this._DepartmentInfo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDepartmentIDChanging(value);
					this.SendPropertyChanging();
					this._DepartmentID = value;
					this.SendPropertyChanged("DepartmentID");
					this.OnDepartmentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProfessionalTitle", DbType="NVarChar(50)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public string ProfessionalTitle
		{
			get
			{
				return this._ProfessionalTitle;
			}
			set
			{
				if ((this._ProfessionalTitle != value))
				{
					this.OnProfessionalTitleChanging(value);
					this.SendPropertyChanging();
					this._ProfessionalTitle = value;
					this.SendPropertyChanged("ProfessionalTitle");
					this.OnProfessionalTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResearchField", DbType="NVarChar(100)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public string ResearchField
		{
			get
			{
				return this._ResearchField;
			}
			set
			{
				if ((this._ResearchField != value))
				{
					this.OnResearchFieldChanging(value);
					this.SendPropertyChanging();
					this._ResearchField = value;
					this.SendPropertyChanged("ResearchField");
					this.OnResearchFieldChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoginName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public string LoginName
		{
			get
			{
				return this._LoginName;
			}
			set
			{
				if ((this._LoginName != value))
				{
					this.OnLoginNameChanging(value);
					this.SendPropertyChanging();
					this._LoginName = value;
					this.SendPropertyChanged("LoginName");
					this.OnLoginNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QQNum", DbType="NVarChar(20)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=11)]
		public string QQNum
		{
			get
			{
				return this._QQNum;
			}
			set
			{
				if ((this._QQNum != value))
				{
					this.OnQQNumChanging(value);
					this.SendPropertyChanging();
					this._QQNum = value;
					this.SendPropertyChanged("QQNum");
					this.OnQQNumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(50)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=12)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CellPhoneNum", DbType="NVarChar(50)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=13)]
		public string CellPhoneNum
		{
			get
			{
				return this._CellPhoneNum;
			}
			set
			{
				if ((this._CellPhoneNum != value))
				{
					this.OnCellPhoneNumChanging(value);
					this.SendPropertyChanging();
					this._CellPhoneNum = value;
					this.SendPropertyChanged("CellPhoneNum");
					this.OnCellPhoneNumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OfficePhoneNum", DbType="NVarChar(50)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=14)]
		public string OfficePhoneNum
		{
			get
			{
				return this._OfficePhoneNum;
			}
			set
			{
				if ((this._OfficePhoneNum != value))
				{
					this.OnOfficePhoneNumChanging(value);
					this.SendPropertyChanging();
					this._OfficePhoneNum = value;
					this.SendPropertyChanged("OfficePhoneNum");
					this.OnOfficePhoneNumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonalDesc", DbType="NVarChar(MAX)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=15)]
		public string PersonalDesc
		{
			get
			{
				return this._PersonalDesc;
			}
			set
			{
				if ((this._PersonalDesc != value))
				{
					this.OnPersonalDescChanging(value);
					this.SendPropertyChanging();
					this._PersonalDesc = value;
					this.SendPropertyChanged("PersonalDesc");
					this.OnPersonalDescChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImaPath", DbType="NVarChar(MAX)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=16)]
		public string ImaPath
		{
			get
			{
				return this._ImaPath;
			}
			set
			{
				if ((this._ImaPath != value))
				{
					this.OnImaPathChanging(value);
					this.SendPropertyChanging();
					this._ImaPath = value;
					this.SendPropertyChanged("ImaPath");
					this.OnImaPathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsMajorManager", DbType="Bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=17)]
		public bool IsMajorManager
		{
			get
			{
				return this._IsMajorManager;
			}
			set
			{
				if ((this._IsMajorManager != value))
				{
					this.OnIsMajorManagerChanging(value);
					this.SendPropertyChanging();
					this._IsMajorManager = value;
					this.SendPropertyChanged("IsMajorManager");
					this.OnIsMajorManagerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoginCount", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=18)]
		public int LoginCount
		{
			get
			{
				return this._LoginCount;
			}
			set
			{
				if ((this._LoginCount != value))
				{
					this.OnLoginCountChanging(value);
					this.SendPropertyChanging();
					this._LoginCount = value;
					this.SendPropertyChanged("LoginCount");
					this.OnLoginCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastLoginTime", DbType="DateTime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=19)]
		public System.Nullable<System.DateTime> LastLoginTime
		{
			get
			{
				return this._LastLoginTime;
			}
			set
			{
				if ((this._LastLoginTime != value))
				{
					this.OnLastLoginTimeChanging(value);
					this.SendPropertyChanging();
					this._LastLoginTime = value;
					this.SendPropertyChanged("LastLoginTime");
					this.OnLastLoginTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TeacherInfo_StudentInfo", Storage="_StudentInfo", ThisKey="TeacherID", OtherKey="PractiseTeacherID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=20, EmitDefaultValue=false)]
		public EntitySet<StudentInfo> StudentInfo
		{
			get
			{
				if ((this.serializing 
							&& (this._StudentInfo.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._StudentInfo;
			}
			set
			{
				this._StudentInfo.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TeacherInfo_StudentInfo1", Storage="_StudentInfo1", ThisKey="TeacherID", OtherKey="TeacherID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=21, EmitDefaultValue=false)]
		public EntitySet<StudentInfo> StudentInfo1
		{
			get
			{
				if ((this.serializing 
							&& (this._StudentInfo1.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._StudentInfo1;
			}
			set
			{
				this._StudentInfo1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DepartmentInfo_TeacherInfo", Storage="_DepartmentInfo", ThisKey="DepartmentID", OtherKey="DepartmentID", IsForeignKey=true)]
		public DepartmentInfo DepartmentInfo
		{
			get
			{
				return this._DepartmentInfo.Entity;
			}
			set
			{
				DepartmentInfo previousValue = this._DepartmentInfo.Entity;
				if (((previousValue != value) 
							|| (this._DepartmentInfo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DepartmentInfo.Entity = null;
						previousValue.TeacherInfo.Remove(this);
					}
					this._DepartmentInfo.Entity = value;
					if ((value != null))
					{
						value.TeacherInfo.Add(this);
						this._DepartmentID = value.DepartmentID;
					}
					else
					{
						this._DepartmentID = default(int);
					}
					this.SendPropertyChanged("DepartmentInfo");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MajorInfo_TeacherInfo", Storage="_MajorInfo", ThisKey="MajorID", OtherKey="MajorID", IsForeignKey=true)]
		public MajorInfo MajorInfo
		{
			get
			{
				return this._MajorInfo.Entity;
			}
			set
			{
				MajorInfo previousValue = this._MajorInfo.Entity;
				if (((previousValue != value) 
							|| (this._MajorInfo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MajorInfo.Entity = null;
						previousValue.TeacherInfo.Remove(this);
					}
					this._MajorInfo.Entity = value;
					if ((value != null))
					{
						value.TeacherInfo.Add(this);
						this._MajorID = value.MajorID;
					}
					else
					{
						this._MajorID = default(int);
					}
					this.SendPropertyChanged("MajorInfo");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_StudentInfo(StudentInfo entity)
		{
			this.SendPropertyChanging();
			entity.TeacherInfo = this;
		}
		
		private void detach_StudentInfo(StudentInfo entity)
		{
			this.SendPropertyChanging();
			entity.TeacherInfo = null;
		}
		
		private void attach_StudentInfo1(StudentInfo entity)
		{
			this.SendPropertyChanging();
			entity.TeacherInfo1 = this;
		}
		
		private void detach_StudentInfo1(StudentInfo entity)
		{
			this.SendPropertyChanging();
			entity.TeacherInfo1 = null;
		}
		
		private void Initialize()
		{
			this._StudentInfo = new EntitySet<StudentInfo>(new Action<StudentInfo>(this.attach_StudentInfo), new Action<StudentInfo>(this.detach_StudentInfo));
			this._StudentInfo1 = new EntitySet<StudentInfo>(new Action<StudentInfo>(this.attach_StudentInfo1), new Action<StudentInfo>(this.detach_StudentInfo1));
			this._DepartmentInfo = default(EntityRef<DepartmentInfo>);
			this._MajorInfo = default(EntityRef<MajorInfo>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
}
#pragma warning restore 1591
